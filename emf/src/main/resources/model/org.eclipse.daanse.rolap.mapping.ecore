<?xml version="1.0" encoding="UTF-8"?>
<!--
/*********************************************************************
* Copyright (c) 2024 Contributors to the Eclipse Foundation.
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
**********************************************************************/
-->
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="rolapmapping" nsURI="https://www.daanse.org/spec/org.eclipse.daanse.rolap.mapping"
    nsPrefix="roma">
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="qualified" value="true"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="prefix" value="RolapMapping"/>
    <details key="basePackage" value="org.eclipse.daanse.rolap.mapping.emf"/>
    <details key="documentation" value="Eclipse Daanse ROLAP Mapping EMF Package - Enterprise-grade metamodel framework for defining comprehensive multidimensional analytical schemas, OLAP cube architectures, and sophisticated business intelligence data structures in Relational OLAP (ROLAP) systems. This EMF-based modeling framework represents the culmination of decades of OLAP research and enterprise deployment experience, providing a complete type system that seamlessly bridges the conceptual gap between traditional relational database structures and advanced multidimensional analytical paradigms required for modern business intelligence applications. Supports database schema modeling, multidimensional cube architectures, hierarchical dimensional modeling, advanced measure calculations, comprehensive security frameworks, aggregation optimization, writeback capabilities, cross-database compatibility, SQL integration, KPI management, and enterprise deployment patterns."/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Documentation">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="orderMajor" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="orderMinor" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="orderMicro" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="showContainer" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="showContainments" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DocumentedElement" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class that provides documentation capabilities to all modeling elements in the ROLAP mapping framework. This class establishes the foundation for comprehensive documentation of OLAP schema components, enabling detailed descriptions, structured help content, and API reference generation. All major modeling elements (cubes, dimensions, measures, etc.) inherit from this class either directly or through AbstractElement."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="documentations" upperBound="-1"
        eType="#//Documentation" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of Documentation objects that provide structured documentation for this element. Each Documentation object contains a title, descriptive content, and ordering information for generating comprehensive help systems, API documentation, and user guides. Multiple documentation entries allow for different types of documentation (user guide, technical reference, examples) to be associated with a single element."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation" eSuperTypes="#//IAnnotation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a custom annotation that can be attached to any AbstractElement to provide additional metadata, configuration hints, or processing instructions. Annotations enable extensibility of the OLAP schema without modifying the core model, allowing for vendor-specific extensions, optimization hints, caching directives, or integration parameters. These are commonly used for custom aggregation rules, display formatting, security policies, or ETL processing instructions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The content or payload of the annotation. This contains the actual data, configuration values, or instructions associated with the annotation. For example, this might contain JSON configuration, XML settings, SQL hints, or simple string values that guide processing behavior. The interpretation of this value depends on the annotation name and the consuming system."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name or key that identifies the type and purpose of this annotation. This serves as a namespace identifier that determines how the annotation value should be interpreted. Common examples include 'cache.timeout', 'security.policy', 'display.formatter', or 'aggregation.hint'. The name should follow a hierarchical naming convention to avoid conflicts between different annotation providers."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AbstractElement" abstract="true" eSuperTypes="#//IAbstractElement #//DocumentedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The fundamental base class for all named elements in the ROLAP mapping model. This abstract class provides the essential identity, naming, and extensibility infrastructure that all OLAP schema components require. It establishes the core patterns for element identification, user-friendly naming, descriptive content, custom annotations, and documentation integration. Every major schema component (Catalog, Cube, Dimension, Hierarchy, Level, Measure, etc.) inherits from this class, ensuring consistent identity management and extensibility across the entire OLAP framework."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of custom annotations that provide extensibility and additional metadata for this element. Annotations allow for vendor-specific extensions, optimization hints, caching directives, security policies, display formatting rules, or integration parameters without modifying the core model. This enables customization for specific OLAP engines, reporting tools, or business requirements while maintaining schema portability."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for this element within the scope of its containing model. This ID serves as the primary key for object references, cross-references between elements, and internal system operations. The ID must be unique and eigther should follow consistent naming conventions (e.g., '_cube_sales', '_dim_product'),or may uses UUIDs. This identifier is used by the OLAP engine for object lookup, caching keys, and maintaining referential integrity during schema transformations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Human-readable description that provides additional context and explanation for this element. This field supports detailed explanations of the element's purpose, business meaning, usage guidelines, or implementation notes. Unlike formal documentation, this is typically a single paragraph or brief text that appears in development tools, schema browsers, or administrative interfaces to help users understand the element's role and usage."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Display name for this element that appears in user interfaces, reports, MDX queries, and XMLA metadata. This should be a user-friendly name that business users will recognize and understand. Unlike the ID, this name doesn't need to be unique across the entire schema and can contain spaces, special characters, and international characters. For example, a dimension might have id='_dim_product' and name='Product Catalog'."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Catalog" eSuperTypes="#//ICatalog #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The root container of an OLAP schema that defines a complete analytical database. A Catalog represents a logical grouping of related cubes, dimensions, and data sources that together form a cohesive analytical model for a specific business domain or application. It serves as the top-level entry point for OLAP connections and contains all the metadata necessary to perform multidimensional analysis. The Catalog manages shared resources like dimension hierarchies, access roles, parameters, and database schema references, ensuring consistency and reusability across all contained analytical objects. In XMLA terms, this corresponds to a database or catalog that clients can connect to and browse."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of schema-level parameters that provide dynamic behavior and configuration within the schema. Parameters enable runtime customization of schema elements, user-specific settings, and conditional logic in calculations. These parameters are available throughout the schema for use in calculated members, named sets, security expressions, and custom formatting. Common uses include date ranges for time intelligence, user preferences, locale settings, and business rule toggles."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cubes" lowerBound="1" upperBound="-1"
        eType="#//Cube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of cubes (both physical and virtual) that define the analytical content available in this catalog. Each cube represents a specific analytical perspective on the business data, containing measures for analysis and dimensions for slicing and dicing. Physical cubes map directly to fact tables and provide the foundation for analysis, while virtual cubes combine multiple physical cubes to create unified analytical views. While not strictly required, at least one cube is typically defined to provide analytical functionality."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namedSets" upperBound="-1"
        eType="#//NamedSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of global named sets that define reusable member collections available across all cubes in the catalog. Named sets provide a way to define commonly used member groupings (like 'Top 10 Products', 'Current Quarter', or 'Key Customers') that can be referenced in MDX queries, calculated members, and reporting applications. These catalog-level named sets are shared across all cubes and provide consistency for common analytical concepts."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="accessRoles" upperBound="-1"
        eType="#//AccessRole">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of security roles that define access control policies for the schema and its contents. Each role specifies what cubes, dimensions, hierarchies, levels, and members a user or group can access, along with the specific permissions (read, write, drill-through) for each resource. Roles can be combined to create complex security scenarios and support both broad organizational permissions and fine-grained data restrictions. These roles are enforced by the OLAP engine during query execution and metadata discovery."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measuresDimensionName"
        ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional custom name for the measures dimension that appears in MDX queries and XMLA metadata. By default, the measures dimension is named 'Measures', but this can be customized for localization or business terminology preferences. The measures dimension is a special system dimension that contains all the measures (metrics) available for analysis in each cube. This name appears in MDX syntax like [CustomMeasuresName].[Sales Amount] and in client tool dimension lists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="defaultAccessRole" eType="#//AccessRole">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the access role that should be applied by default when users connect without explicit role assignment. This provides a baseline security policy for the schema, typically configured to allow basic read access to public data while restricting sensitive information. If not specified, Daanse does not assign a built-in default role, and access will be denied unless a role is explicitly provided. This setting is particularly useful for public reporting scenarios, shared dashboards, or development environments where default read access is desirable."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dbschemas" upperBound="-1"
        eType="#//DatabaseSchema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of database schemas that define the physical data model underlying this catalog. Each DatabaseSchema represents a logical grouping of tables, views, and columns from one or more physical databases. The catalog can integrate data from multiple database schemas, enabling cross-database analysis and federated OLAP scenarios. These schemas provide the foundation for all cube queries and define the available tables and columns for fact tables, dimension tables, and lookup tables."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Cube" abstract="true" eSuperTypes="#//AbstractElement #//ICube">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for all cube types in the OLAP model. A cube represents a multidimensional data structure that enables analytical queries across multiple business dimensions. It serves as the primary analytical object that users interact with to perform OLAP operations like slicing, dicing, drilling down, and rolling up. Cubes contain measures (the numeric facts to be analyzed) and are connected to dimensions (the analytical perspectives for viewing the data). The abstract Cube class defines common properties and behaviors shared by both PhysicalCube (backed by fact tables) and VirtualCube (combining multiple physical cubes) implementations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="calculatedMembers" upperBound="-1"
        eType="#//CalculatedMember" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of calculated members defined at the cube level. Calculated members are virtual members that are computed using MDX expressions rather than being stored in the database. They can represent complex business calculations (like profit margins, growth rates, or variance analysis), derived measures, or custom dimension members. Each calculated member must belong to a specific dimension — most commonly the Measures dimension for calculated measures. Cube-level calculated members are available in all queries against this cube and provide a way to extend the analytical model without modifying the underlying data structures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namedSets" upperBound="-1"
        eType="#//NamedSet" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of named sets specific to this cube. Named sets define reusable collections of members that are commonly used in analysis and reporting. Cube-specific named sets might include concepts like 'Top Products for this Sales Territory', 'Budget Items', or 'Key Performance Indicators' that are only meaningful in the context of this particular cube. These named sets provide cube-specific analytical shortcuts and are not shared across cubes."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="kpis" upperBound="-1" eType="#//Kpi"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of Key Performance Indicators (KPIs) defined for this cube. KPIs are business metrics that measure progress toward specific business objectives and typically include target values, status indicators, and trend information. They provide a structured way to define and track important business measurements like sales targets, quality metrics, or operational efficiency indicators. KPIs often include visual elements like traffic light indicators and are commonly used in executive dashboards and scorecards. KPIs are defined using the `Kpi` element and are primarily exposed via XMLA; they do not directly affect MDX query results and may not be supported by all client tools."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="enabled" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether this cube is active and available for queries. When set to false, the cube is excluded from XMLA metadata discovery, cannot be queried, and does not appear in client tool cube lists. This provides a way to temporarily disable cubes during maintenance, development, or data loading without removing them from the schema. Disabled cubes remain in the model for administrative purposes but are not accessible to end users."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether this cube appears in client tool listings and XMLA metadata discovery. Unlike the enabled flag, invisible cubes can still be queried if the cube name is known, but they don't appear in browse lists or cube explorers. This is useful for creating internal or system cubes, staging cubes for development, or providing advanced cubes only to power users who know the cube names explicitly."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="defaultMeasure" eType="#//Member">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the measure that should be used as the default when queries don't explicitly specify a measure. This provides a sensible default for client tools and ad-hoc queries, typically pointing to the most commonly used or most important measure in the cube (like 'Sales Amount' or 'Quantity'). When users drag dimensions into a pivot table or create a new query, this measure is automatically included to provide immediate meaningful results. defaultMeasure sets the default member of the [Measures] dimension and is used in contexts where no measure is explicitly specified in the MDX query."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PhysicalCube" eSuperTypes="#//Cube #//IPhysicalCube">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A concrete cube implementation that maps directly to one or more fact tables in the underlying database. PhysicalCube represents the most common type of OLAP cube, where measures are derived from numeric columns in fact tables and dimensions provide different analytical perspectives on that factual data. Each PhysicalCube is built around a central fact table (or fact view) that contains the quantitative data to be analyzed, connected to dimension tables through foreign key relationships. The PhysicalCube handles the mapping between the logical OLAP model and the physical relational database structure, enabling the OLAP engine to generate efficient SQL queries for analysis operations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensionConnectors" upperBound="-1"
        eType="#//DimensionConnector" containment="true" eOpposite="#//DimensionConnector/physicalCube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of dimension connectors that link this physical cube to its analytical dimensions. Each DimensionConnector defines how a dimension relates to the cube's fact table, specifying the foreign key columns that connect facts to dimension members. These connectors enable the cube to be sliced and diced along different analytical axes, such as time, geography, product categories, or customer segments. The connectors handle both shared dimensions (used across multiple cubes) and cube-specific dimensions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="query" lowerBound="1" eType="#//Query">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the Query object that defines how to retrieve the fact data for this cube. This is typically a TableQuery pointing to a fact table, but can also be a more complex JoinQuery for snowflake schemas or a SqlSelectQuery for custom fact views. The query defines the primary data source for all measures in this cube and serves as the foundation for SQL generation during OLAP operations. This is a required field as every physical cube must have a data source."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writebackTable" eType="#//WritebackTable"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional configuration for writeback functionality, which allows users to modify cube data through OLAP clients and have those changes written back to the database. The WritebackTable defines the target table structure, column mappings, and rules for how user modifications should be translated into database updates. This enables planning and budgeting scenarios where users can input forecast data or adjust targets directly through pivot tables and analytical tools."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" upperBound="-1"
        eType="#//Action" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of actions that define interactive operations available to users when analyzing this cube. Actions provide integration points with external systems and enable drill-through to detailed data, launching reports, opening web pages, or executing custom business logic. Common actions include drill-through to transaction details, launching related applications, or triggering business processes based on the analytical context of the user's current selection."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cache" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether query results and calculated values for this cube should be cached by the OLAP engine. When enabled (default), the system caches query results, aggregated values, and member data to improve performance for subsequent queries. Disabling cache may be useful for cubes with rapidly changing data or during development and testing phases where fresh data is always required."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measureGroups" lowerBound="1"
        upperBound="-1" eType="#//MeasureGroup" containment="true" eOpposite="#//MeasureGroup/physicalCube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of measure groups that organize the measures (metrics) available in this cube. Each MeasureGroup represents a logical grouping of related measures that share common properties like data source, aggregation behavior, or business domain. A measure group is typically bound to a single underlying fact table, ensuring all its measures share the same dimensionality and granularity. For example, a sales cube might have separate measure groups for 'Sales Metrics' (revenue, quantity) and 'Cost Metrics' (cost of goods, expenses), each potentially linked to different fact tables (e.g., fact_sales and fact_costs respectively). At least one measure group is required as every physical cube must provide measures for analysis."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VirtualCube" eSuperTypes="#//Cube #//IVirtualCube">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A virtual cube that combines measures and dimensions from multiple physical cubes into a unified analytical view. Virtual cubes enable cross-cube analysis by creating a logical integration layer over existing physical cubes, allowing users to analyze related metrics from different business processes in a single query. For example, a virtual cube might combine sales data from a Sales cube with inventory data from an Inventory cube to enable integrated sales and stock analysis. Virtual cubes don't have their own fact tables but instead reference and aggregate data from their constituent physical cubes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensionConnectors" upperBound="-1"
        eType="#//DimensionConnector">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of dimension connectors that define which dimensions are available for analysis in this virtual cube. These connectors typically reference shared dimensions that exist across the constituent physical cubes, enabling consistent slicing and dicing of the combined measures. The virtual cube can only include dimensions that are meaningful and accessible across its constituent cubes to ensure query coherence."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cubeUsages" lowerBound="1"
        upperBound="-1" eType="#//CubeConnector" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of cube connectors that specify which physical cubes contribute data to this virtual cube. Each CubeConnector defines how a specific physical cube is integrated, including any dimension mapping, measure selection, and data filtering rules. At least one physical cube must be referenced, and the virtual cube can aggregate and correlate data across all its constituent cubes to provide unified analytical views."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedCalculatedMembers"
        upperBound="-1" eType="#//CalculatedMember">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of calculated members from constituent physical cubes that should be made available in this virtual cube. This allows the virtual cube to expose complex calculations and derived metrics that were defined in the underlying physical cubes, providing a complete analytical view that includes both base measures and computed values. The virtual cube can selectively include only relevant calculated members for its intended analytical purpose."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedMeasures" upperBound="-1"
        eType="#//BaseMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of base measures from constituent physical cubes that should be included in this virtual cube. This defines which specific measures (like Sales Amount, Quantity, Cost) from the underlying physical cubes are made available for analysis in the virtual cube. The virtual cube can selectively expose only the measures that are relevant for its intended analytical scenarios, creating a focused and simplified view for users."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CubeConnector" eSuperTypes="#//ICubeConnector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A connector that defines how a physical cube is integrated into a virtual cube, specifying the configuration for data aggregation, dimensional handling, and cross-cube analysis rules. CubeConnector serves as the bridge between virtual cubes and their constituent physical cubes, providing fine-grained control over how multiple cubes are combined into unified analytical views. Each connector references a specific physical cube and defines policies for handling dimensional inconsistencies, measure integration, and query processing behavior. This enables virtual cubes to aggregate data from heterogeneous physical cubes while maintaining analytical coherence and performance optimization."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreUnrelatedDimensions"
        eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls how the OLAP engine handles dimensions that don't exist in this physical cube when processing queries in the virtual cube context. When set to true, the virtual cube ignores dimensions that are not present in this referenced physical cube, allowing queries to proceed even if they reference dimensions not available in all constituent cubes. This enables flexible virtual cube designs where physical cubes have different dimensional structures. When false (default), the virtual cube enforces strict dimensional consistency, potentially failing queries that reference dimensions not present in all referenced cubes. This setting is crucial for cross-cube analysis scenarios and affects MDX query validation, aggregation processing, and XMLA metadata exposure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cube" lowerBound="1" eType="#//Cube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Mandatory reference to the physical cube that this connector integrates into the virtual cube. This establishes the binding between the virtual cube and one of its constituent data sources, enabling the virtual cube to access the measures, dimensions, and calculated members defined in the referenced physical cube. The reference is resolved at runtime during virtual cube initialization to create the integrated analytical structure. Each CubeConnector must reference exactly one cube, and virtual cubes typically contain multiple connectors to combine data from several physical cubes."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MeasureGroup" eSuperTypes="#//IMeasureGroup">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A logical container that organizes related measures within a physical cube, providing grouping for measures that share common characteristics, business context, or data sources. MeasureGroup serves as both an organizational and metadata management mechanism, enabling better structure for complex cubes with many measures. For example, a sales cube might have separate measure groups for 'Revenue Metrics' (containing sales amounts, discounts, taxes) and 'Volume Metrics' (containing quantities, units, counts). Each measure group belongs to exactly one physical cube and contains one or more measures that are processed and displayed together in OLAP clients and XMLA metadata. A MeasureGroup is typically based on a single fact table in the data warehouse, ensuring that all its measures share the same granularity and relationship to dimensions. This alignment simplifies processing, querying, and maintenance."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measures" lowerBound="1"
        upperBound="-1" eType="#//BaseMeasure" containment="true" eOpposite="#//BaseMeasure/measureGroup">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of measures that belong to this measure group. Each measure represents a quantitative fact that can be analyzed and aggregated in OLAP queries, such as sales amounts, quantities, costs, or counts. The measures share common grouping characteristics and are often related by business context or data source. At least one measure is required per measure group, and all measures inherit the group's organizational and metadata properties. Measures can be of various types including sum, average, min, max, count, or custom aggregations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Display name for this measure group that appears in OLAP clients, cube browsers, and metadata discovery. The name should clearly indicate the business purpose or theme of the grouped measures, such as 'Sales Metrics', 'Financial KPIs', or 'Inventory Measures'. This name helps users understand the logical organization of measures and appears in XMLA metadata and client tool measure lists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="physicalCube" lowerBound="1"
        eType="#//PhysicalCube" eOpposite="#//PhysicalCube/measureGroups">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the physical cube that contains this measure group. This establishes the bidirectional relationship between the cube and its measure groups, enabling the cube to organize its measures into logical groups while allowing the measure group to access cube-level properties and configurations. Each measure group belongs to exactly one physical cube and contributes to that cube's analytical capabilities."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Member" abstract="true" eSuperTypes="#//IMember #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class representing a member in the OLAP multidimensional model. A Member is a specific point or value within a dimension that can be used for slicing, dicing, and filtering data in analytical queries. Members exist within hierarchies and levels, forming the navigational structure that users traverse when exploring data. Examples include [Time].[1997].[January], [Customer].[USA].[California], or [Measures].[Sales Amount]. Members can have parent-child relationships, properties, and various types including regular dimensional values, calculated formulas, or special system members like All members. This abstract class provides the foundation for both regular dimension members and measures, which are special members of the [Measures] dimension."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="calculatedMemberProperties"
        upperBound="-1" eType="#//CalculatedMemberProperty" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of calculated member properties that provide additional metadata and computed values for this member. These properties extend the member with custom attributes that can be derived through MDX expressions, such as formatted display names, conditional formatting rules, or business logic calculations. Calculated member properties are particularly useful for measures and calculated members where dynamic property values enhance the analytical experience."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cellFormatter" eType="#//CellFormatter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to a cell formatter that controls how values associated with this member are displayed in client applications. The formatter defines number formatting, currency symbols, date formats, and other presentation rules that ensure consistent and appropriate display of this member's data across different analytical tools and reports."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayFolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional folder path that organizes this member within client tool hierarchies and measure lists. Display folders create logical groupings in OLAP client interfaces, helping users navigate large numbers of measures and calculated members. For example, 'Financial\\Profitability' or 'Operations\\Quality Metrics'. The folder structure appears in tools like Excel pivot tables and cube browsers."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag controlling whether this member appears in client tool member lists, XMLA metadata discovery, and cube browsers. When set to false, the member becomes hidden from normal user interfaces but remains accessible through direct references in MDX queries. This is useful for creating internal system members, intermediate calculation steps, or advanced members intended only for power users who know the member names explicitly."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="formatString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Format string that defines how values for this member should be displayed in client applications. Uses standard formatting syntax for numbers, currencies, dates, and percentages (e.g., '#,##0.00', '$#,##0', 'yyyy-MM-dd', '0.0%'). This formatting is applied consistently across all OLAP clients and XMLA-compliant tools, ensuring uniform data presentation regardless of the client application being used."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MinMeasure" eSuperTypes="#//IMinMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that calculates the minimum value from the referenced column across the aggregated data set. MinMeasure uses the SQL MIN() aggregate function to find the smallest value in the grouped data, making it ideal for metrics like lowest price, earliest date, minimum temperature, or smallest quantity. The measure provides non-additive aggregation behavior, meaning the minimum of a set of minimums is simply the overall minimum value. This measure type supports fast database-optimized aggregation and is commonly used for trend analysis, quality control, and boundary condition monitoring."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MaxMeasure" eSuperTypes="#//IMaxMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that calculates the maximum value from the referenced column across the aggregated data set. MaxMeasure uses the SQL MAX() aggregate function to find the largest value in the grouped data, making it ideal for metrics like highest price, latest date, peak temperature, or largest quantity. The measure provides non-additive aggregation behavior, meaning the maximum of a set of maximums is simply the overall maximum value. This measure type supports fast database-optimized aggregation and is commonly used for performance tracking, capacity planning, and threshold monitoring."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SumMeasure" eSuperTypes="#//ISumMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that calculates the sum of all values from the referenced column across the aggregated data set. SumMeasure uses the SQL SUM() aggregate function and represents the most common type of OLAP measure for additive metrics like sales amounts, quantities, costs, and revenues. The measure provides fully additive behavior, meaning values can be meaningfully summed across all dimensions. SumMeasure supports fast aggregation for INTEGER and NUMERIC data types and is optimized for pre-aggregated table usage, making it the highest-performance measure type for typical business metrics."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AvgMeasure" eSuperTypes="#//IAvgMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that calculates the arithmetic mean (average) of all values from the referenced column across the aggregated data set. AvgMeasure uses the SQL AVG() aggregate function and is ideal for metrics like average price, mean rating, typical duration, or average temperature. The measure provides semi-additive behavior - averages cannot be simply summed across dimensions but must be recalculated using the underlying sum and count values. This measure type is commonly used for performance indicators, quality metrics, and statistical analysis in business intelligence scenarios."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NoneMeasure" eSuperTypes="#//INoneMeasure #//SQLExpressionBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that performs no aggregation and returns raw values from the data source without any mathematical operation. NoneMeasure is used when you need to display individual data values rather than aggregated summaries, such as showing transaction details, individual records, or when drill-through functionality needs to display the exact source data. This measure type is particularly useful for detailed reporting scenarios where aggregation would obscure important individual data points or when the data itself represents already-aggregated values that should not be further processed."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CountMeasure" eSuperTypes="#//ICountMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A measure that counts the number of non-null values in the referenced column across the aggregated data set. CountMeasure uses the SQL COUNT() aggregate function and is essential for metrics like number of transactions, customer count, product count, or event frequency. The measure provides fully additive behavior - counts can be meaningfully summed across all dimensions. CountMeasure offers excellent performance characteristics and supports fast aggregation, making it ideal for dashboard KPIs and summary statistics in analytical applications."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="distinct" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that determines whether the count operation should only count distinct (unique) values in the column, equivalent to SQL COUNT(DISTINCT column) versus COUNT(column). When set to true (default), duplicate values are counted only once, providing a count of unique values which is essential for metrics like unique customer count, distinct product count, or number of different transaction types. When set to false, all non-null values are counted including duplicates, which is useful for total transaction count, total order count, or frequency-based metrics. The distinct behavior significantly impacts the semantic meaning of the measure - distinct counts answer 'how many different?' questions while non-distinct counts answer 'how many total?' questions. This setting also affects measure additivity patterns and aggregation behavior, as distinct counts are not always meaningfully additive across dimensional hierarchies, requiring careful consideration in cube design and query optimization scenarios where drill-down operations may produce different results based on the distinct setting."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextAggMeasure" eSuperTypes="#//ITextAggMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A specialized measure that concatenates text values from the referenced column across the aggregated data set, creating a single string result from multiple text entries. TextAggMeasure is ideal for combining comments, descriptions, tags, or other textual data into unified displays. The measure supports custom separators, ordering of concatenated values, duplicate handling, and null value management. Common use cases include creating summary comment fields, combining product features, aggregating customer feedback, or building comma-separated lists of related items for analytical reporting."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="orderByColumns" lowerBound="1"
        upperBound="-1" eType="#//OrderedColumn">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of ordered columns that determine the sequence in which text values are concatenated. The ordering is crucial for creating meaningful text aggregations where the sequence of values matters, such as chronological comments, ranked lists, or priority-ordered descriptions. At least one OrderedColumn must be specified to ensure consistent and predictable text concatenation results across different query executions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="separator" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="String value used to separate individual text values when concatenating them into the final result. Common separators include ', ' (comma-space), '; ' (semicolon-space), ' | ' (pipe), or newline characters. If not specified, values are concatenated without separation. The separator choice should match the intended use case and display requirements for the aggregated text."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="distinct" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether duplicate text values are included in the concatenation. When set to true (default), only unique text values are included in the result, preventing repetitive text in the aggregated output. When false, all values including duplicates are concatenated, which may be useful for frequency-based text analysis or when repetition provides meaningful information."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="coalesce" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Default text value to use when encountering null or empty values during concatenation. This prevents null values from creating gaps or unexpected results in the aggregated text. Common coalesce values include '[Empty]', 'N/A', or empty string. If not specified, null values are simply ignored during the concatenation process."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="onOverflowTruncate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Behavior specification for handling text concatenation results that exceed database column size limits or application constraints. This attribute defines how the system should respond when the aggregated text becomes too long, such as truncating at a specific length, adding ellipsis, or applying other overflow handling strategies to maintain data integrity and display consistency."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BitAggMeasure" eSuperTypes="#//IBitAggMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A specialized measure that performs bitwise operations (AND, OR, XOR) on integer values from the referenced column across the aggregated data set. BitAggMeasure is designed for scenarios involving flag combinations, permission masks, feature toggles, or binary state aggregations. The measure supports different bitwise operations and optional negation (NOT) to create complex boolean logic evaluations. Common use cases include combining user permissions, aggregating feature flags, analyzing system status bits, or creating composite boolean indicators from multiple binary conditions."/>
    </eAnnotations>
    <eOperations name="getBitAggType" lowerBound="1" eType="#//BitAggregationType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return BitAggregationType.fromValue(getAggType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="aggType" eType="#//BitAggType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the type of bitwise operation to perform during aggregation. Supported operations include AND (all bits must be set), OR (any bit can be set), and XOR (exclusive or for detecting unique combinations). The choice of operation determines how individual bit values are combined across the aggregated data set, enabling different logical interpretations of the binary data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="not" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that applies logical negation (NOT operation) to the result of the bitwise aggregation. When set to true, the final result is inverted, creating operations like NAND, NOR, or NXOR. This enables complex boolean logic scenarios and inverted conditions without requiring separate calculated members or custom expressions."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PercentileMeasure" eSuperTypes="#//IPercentileMeasure #//BaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An advanced statistical measure that calculates percentile values from the referenced column across the aggregated data set. PercentileMeasure uses SQL percentile functions (PERCENTILE_DISC or PERCENTILE_CONT) to determine values at specific percentage points in the data distribution. This measure is essential for statistical analysis, distribution studies, quartile calculations, and performance benchmarking. Common use cases include median calculations (50th percentile), quartile analysis (25th, 75th percentiles), or identifying values at specific distribution points for outlier detection and performance analysis."/>
    </eAnnotations>
    <eOperations name="getPercentileType" lowerBound="1" eType="#//PercentileType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return PercentileType.fromValue(getPercentType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//OrderedColumn">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the OrderedColumn that defines both the source data values and the sorting criteria for percentile calculation. The OrderedColumn specifies the column containing the values to analyze and the sort order (ascending or descending) that determines how percentiles are computed. This is essential for accurate percentile calculations as the ordering directly affects which values correspond to specific percentile positions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="percentType" eType="#//PercentType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the type of percentile calculation to perform. 'DISC' (discrete) returns an actual value from the dataset that corresponds to the percentile position, while 'CONT' (continuous) may interpolate between values to provide a more precise percentile result. The choice affects the precision and interpretation of percentile results, with discrete being more appropriate for categorical data and continuous for numerical analysis."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="percentile" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Double"
        defaultValueLiteral="1.0">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Double value between 0.0 and 1.0 that specifies which percentile to calculate. Common values include 0.25 (25th percentile/first quartile), 0.5 (50th percentile/median), 0.75 (75th percentile/third quartile), 0.9 (90th percentile), and 0.95 (95th percentile). The default value of 1.0 represents the maximum value (100th percentile). This value determines the specific point in the data distribution that the measure will return."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NthAggMeasure" eSuperTypes="#//INthAggMeasure #//ColumnBaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An advanced measure that returns the Nth value from an ordered set of values in the referenced column across the aggregated data set. NthAggMeasure is useful for retrieving specific positioned values such as the first occurrence, second highest value, last entry, or any specific rank within ordered data. The measure supports custom ordering criteria and null value handling, making it ideal for ranking analysis, top/bottom value identification, and position-specific data retrieval in business intelligence scenarios."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="orderByColumns" lowerBound="1"
        upperBound="-1" eType="#//OrderedColumn">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of ordered columns that define the sorting criteria for determining the Nth value position. The ordering determines how values are ranked and which value corresponds to the specified position N. Multiple columns can be used for complex sorting scenarios, such as ordering by date first, then by amount. At least one OrderedColumn must be specified to ensure consistent and predictable Nth value selection."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreNulls" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether null values are excluded from the position counting when determining the Nth value. When set to true (default), null values are ignored and do not count toward the position N, ensuring that the result always refers to the Nth non-null value. When false, null values are included in the position counting, which may result in null being returned if it occupies the Nth position."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="n" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Integer value (1-based) that specifies which position in the ordered set to retrieve. For example, N=1 returns the first value, N=2 returns the second value, and so on. The value must be positive and should not exceed the expected number of values in the aggregated data set. If N is larger than the available values, the measure typically returns null or the last available value depending on the database implementation."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CustomMeasure" eSuperTypes="#//ICustomMeasure #//BaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A flexible measure that allows custom aggregation implementations through configurable templates and properties. CustomMeasure enables advanced business logic, complex calculations, or integration with external systems that cannot be achieved through standard aggregation functions. The measure uses templates with placeholders that are populated from referenced columns and custom properties, providing a powerful extension mechanism for specialized analytical requirements while maintaining the standard measure interface."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="template" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Template string that defines the custom aggregation logic or SQL expression pattern. The template can contain placeholders that are replaced with actual column references and property values at runtime. This enables dynamic SQL generation, custom function calls, or complex expressions that adapt to different database dialects and business requirements while maintaining a consistent measure definition."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="columns" lowerBound="1"
        upperBound="-1" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of columns that provide data inputs for the custom measure calculation. These columns supply the raw data values that are processed through the custom template logic. At least one column must be specified to provide meaningful data for the custom aggregation. The columns are referenced in the template through placeholders or positional parameters."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="properties" lowerBound="1"
        upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of custom property values that parameterize the measure template and provide configuration for the custom aggregation logic. Properties can include constants, configuration values, or dynamic parameters that modify the behavior of the custom measure. At least one property must be defined to configure the custom aggregation appropriately for the specific business requirements."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SQLExpressionBaseMeasure" eSuperTypes="#//ISqlExpressionBaseMeasure #//BaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Advanced measure implementation that enables sophisticated analytical calculations through custom SQL expressions, providing powerful capabilities for implementing complex business logic, mathematical computations, and data transformations that cannot be achieved through standard column-based measures or simple aggregation functions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//SQLExpressionColumn">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the SQLExpressionColumn that defines the custom SQL expression logic for this advanced measure implementation. The SQLExpressionColumn contains the sophisticated SQL formula, mathematical computations, conditional logic, and data transformations that enable complex analytical calculations beyond the capabilities of standard column-based aggregation functions. This relationship establishes the connection between the measure definition and its custom SQL implementation, enabling powerful analytical scenarios such as weighted averages with multiple factors, conditional aggregations based on dimensional context, statistical calculations requiring advanced mathematical functions, financial formulas implementing specific industry regulations, and composite metrics that combine multiple data sources with complex business rules."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ColumnBaseMeasure" eSuperTypes="#//IColumnBaseMeasure #//BaseMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for measures that derive their values from direct column references in the database. ColumnBaseMeasure represents the most common and highest-performance type of measure where aggregation functions (SUM, COUNT, AVG, etc.) are applied directly to specific table columns. This provides optimal query performance, supports fast aggregation capabilities, and enables efficient use of database indexes and pre-computed aggregation tables."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the database column that provides the source data for this measure. The column must contain numeric data appropriate for the measure's aggregation function (e.g., numeric columns for SUM, any column for COUNT). This direct column reference enables optimal SQL generation, efficient database query execution, and automatic optimization through indexes and aggregate tables."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BaseMeasure" abstract="true" eSuperTypes="#//IBaseMeasure #//Member">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for all measure types in the OLAP model, representing quantitative facts that can be analyzed and aggregated in multidimensional queries. BaseMeasure extends Member to leverage the OLAP member infrastructure while adding measure-specific capabilities like data type specification, formatting rules, and aggregation behavior. All concrete measure implementations (SumMeasure, CountMeasure, etc.) inherit from this class, ensuring consistent measure behavior and enabling polymorphic measure handling throughout the OLAP framework. Measures are special members that belong to the [Measures] dimension and provide the numeric values for analytical operations."/>
    </eAnnotations>
    <eOperations name="getDatatype" lowerBound="1" eType="#//InternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return InternalDataType.fromValue(getDataType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="backColor" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Background color specification for this measure when displayed in OLAP clients and reporting tools. The color value should follow standard color notation (e.g., hex colors like '#FF0000', RGB values, or color names). This visual formatting helps users quickly identify and differentiate measures in pivot tables, charts, and other analytical displays, particularly useful for highlighting important KPIs or categorizing related measures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dataType" eType="#//ColumnInternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Data type specification for this measure that determines how values are processed, stored, and displayed. The data type affects aggregation behavior, formatting options, and client tool integration. Common types include INTEGER for counts, NUMERIC for monetary amounts, DECIMAL for precise calculations, and DOUBLE for statistical measures. This information is used by the OLAP engine for type validation, optimization, and proper value handling across different database systems."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="formatter" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Formatter specification that controls how this measure's values are displayed in client applications. The formatter can reference predefined format patterns, custom formatting functions, or specific formatting rules. This ensures consistent presentation of measure values across different analytical tools and reports, handling aspects like decimal places, currency symbols, percentage notation, and locale-specific formatting."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measureGroup" lowerBound="1"
        eType="#//MeasureGroup" eOpposite="#//MeasureGroup/measures">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the measure group that contains and organizes this measure. Every measure must belong to exactly one measure group, which provides logical organization, metadata management, and context for the measure within its cube. The measure group relationship enables proper measure categorization, shared properties, and structured navigation in OLAP client tools."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Kpi" eSuperTypes="#//AbstractElement #//IKpi">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a Key Performance Indicator (KPI) that provides sophisticated business performance monitoring capabilities by combining multiple analytical expressions with visual indicators, targets, and trend analysis to deliver executive-level business intelligence insights. KPI represents a high-level business monitoring construct that transforms raw analytical data into actionable business intelligence by evaluating performance against strategic goals, visualizing trends and status through graphical indicators, and providing contextual information that enables rapid decision-making at executive and management levels."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="translations" upperBound="-1"
        eType="#//Translation" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of Translation objects that provide localized names, descriptions, and captions for this KPI across different languages and cultural contexts, enabling global deployment of business intelligence dashboards with culturally appropriate KPI representations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayFolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Organizational folder path that controls the hierarchical display and categorization of this KPI within business intelligence client tools, OLAP browsers, and executive dashboard applications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associatedMeasureGroupID"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Identifier reference to the MeasureGroup that provides the primary analytical context and data foundation for this KPI's calculations, establishing the logical connection between the high-level performance indicator and the underlying measures that drive its evaluation. The associated measure group relationship ensures that KPI calculations have access to the appropriate fact data, aggregation tables, and dimensional context necessary for accurate performance evaluation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression or measure reference that defines the primary calculation logic for this KPI's actual performance value, representing the core analytical computation that transforms raw data into meaningful business performance metrics. The value expression must return a numeric result that represents the current state or achievement level of the key performance indicator, serving as the foundation for all KPI evaluations, comparisons, and trend analysis."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="goal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression or static value that defines the target or desired performance level for this KPI, establishing the benchmark against which actual performance is evaluated to determine success, variance, and performance status indicators. The goal expression provides the critical reference point that enables meaningful KPI analysis by defining what constitutes successful performance, acceptable thresholds, and strategic objectives that drive business decision-making and performance management initiatives."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="status" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that evaluates the current performance status of this KPI by comparing the actual value against the goal and returning a status indicator that can be used to drive visual representations such as traffic light indicators, performance gauges, and dashboard alerts. The status expression typically returns numeric values that correspond to predefined status levels (e.g., -1 for poor, 0 for acceptable, 1 for good) that can be mapped to visual indicators like red, yellow, and green colors in dashboard displays."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="trend" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that evaluates the directional trend of this KPI's performance over time, providing analytical insight into whether performance is improving, declining, or remaining stable relative to historical patterns and business cycles. The trend expression typically returns numeric values that represent trend direction and magnitude (e.g., -1 for declining, 0 for stable, 1 for improving) that can be visualized through trend arrows, slope indicators, and momentum gauges in executive dashboards and performance monitoring applications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="weight" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Numeric expression that defines the relative importance or weighting factor of this KPI within composite performance assessments, balanced scorecards, and hierarchical KPI structures where multiple performance indicators are combined into unified performance evaluations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="trendGraphic" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the visual graphic or icon set that represents trend indicators for this KPI in dashboard displays, executive reports, and business intelligence applications. The trend graphic specification enables consistent and intuitive visual representation of KPI trend analysis across different reporting tools and dashboard platforms, supporting user experience consistency and executive comprehension of performance trajectories."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="statusGraphic" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the visual graphic or icon set that represents status indicators for this KPI in dashboard displays, performance scorecards, and executive reporting applications. The status graphic specification enables consistent and professional visual representation of KPI performance status across different analytical tools and business intelligence platforms, ensuring immediate recognition and interpretation of performance against targets and goals."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="currentTimeMember" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the specific time dimension member that represents the temporal context for evaluating KPI calculations and temporal analysis scenarios. This attribute enables time-aware KPI evaluation where calculations are performed relative to a specific point in time or temporal context, supporting sophisticated time-based performance analysis and temporal comparative reporting across different time periods, business cycles, and strategic planning horizons."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentKpi" eType="#//Kpi">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the parent KPI in hierarchical KPI structures that enables composite performance measurement through nested KPI relationships. This association supports sophisticated performance management scenarios where complex business objectives are decomposed into hierarchical performance indicators, enabling drill-down analysis from strategic organizational KPIs to tactical departmental metrics and operational performance measures."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedSet" eSuperTypes="#//AbstractElement #//INamedSet">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a reusable collection of dimensional members that can be referenced by name in MDX queries, calculated members, and other analytical expressions, providing powerful capabilities for creating sophisticated analytical logic that operates on predefined sets of business entities. NamedSet represents a fundamental building block for advanced OLAP applications where complex business concepts need to be encapsulated into reusable analytical components that can be consistently applied across multiple queries, reports, and calculations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayFolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Organizational folder path that determines how this named set is categorized and presented within client tool metadata browsers, enabling logical grouping of related sets for improved user navigation and analytical organization. Display folders support hierarchical organization using forward-slash notation, allowing complex taxonomies that reflect business organization, analytical domains, or functional categories. This organizational capability is essential for large-scale OLAP deployments where numerous named sets need to be logically organized for efficient discovery and use by analytical users, business analysts, and report developers who need to quickly locate and understand available analytical building blocks."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="formula" eType="#//Formula">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that defines the logic for selecting members that belong to this named set, supporting sophisticated member selection criteria that can include filtering conditions, hierarchical relationships, attribute-based selection, cross-dimensional logic, and dynamic evaluation based on current data values. The formula provides the computational foundation for the named set, enabling complex business rules to be encapsulated in reusable analytical components that can range from simple member enumerations to sophisticated conditional logic that adapts to changing business conditions. Formula expressions support the full range of MDX capabilities including set operations, filtering functions, hierarchical navigation, attribute-based selection, and dynamic evaluation that enables named sets to serve as powerful analytical building blocks for advanced business intelligence applications."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Dimension" abstract="true" eSuperTypes="#//AbstractElement #//IDimension">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract foundational class for all dimensional structures in OLAP modeling, representing the core concept of analytical dimensions that provide the contextual framework for multidimensional analysis by organizing business entities into hierarchical structures that enable slicing, dicing, drilling, and pivoting operations across different perspectives of business data. Dimension serves as the architectural foundation for the entire dimensional modeling paradigm, encapsulating the essential characteristics and behaviors that all dimensional structures must support including hierarchical organization of members from detailed to aggregated levels, support for multiple alternative hierarchies that provide different analytical perspectives on the same business domain, integration with security frameworks that can restrict access at dimensional and member levels, and compatibility with various analytical operations that form the basis of OLAP functionality."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hierarchies" lowerBound="1"
        upperBound="-1" eType="#//Hierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of Hierarchy objects that define the alternative organizational structures and navigation paths available within this dimension, providing multiple perspectives and drill-down patterns for analyzing the same business domain from different analytical viewpoints. Each dimension must contain at least one hierarchy, and many dimensions benefit from multiple hierarchies that offer different ways to organize and navigate the dimensional data based on varying business needs, user preferences, and analytical contexts. This multi-hierarchy capability is essential for sophisticated dimensional modeling where business entities can be organized in multiple meaningful ways, supporting scenarios such as product dimensions that provide both category-based hierarchies (Category → Subcategory → Product) and brand-based hierarchies (Brand → Product Line → Product), geographic dimensions that offer administrative hierarchies (Country → State → City) alongside sales territory hierarchies (Region → Territory → District), time dimensions that provide both calendar hierarchies (Year → Quarter → Month → Day) and fiscal hierarchies (Fiscal Year → Fiscal Quarter → Fiscal Month), and customer dimensions that support both demographic hierarchies (Age Group → Gender → Customer) and value-based hierarchies (Customer Segment → Customer Tier → Individual Customer)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="usagePrefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional prefix that can be applied to this dimension when used in specific contexts or cubes. The usage prefix allows for dimension name customization and disambiguation when the same dimensional concept is used multiple times within a single analytical context. This enables scenarios like having both 'Ship Date' and 'Order Date' dimensions that share the same underlying time dimension structure but have different contextual meanings and display names."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag controlling whether this dimension appears in client tool dimension lists, XMLA metadata discovery, and cube browsers. When set to false, the dimension becomes hidden from normal user interfaces but remains fully accessible through direct references in MDX queries. This is useful for creating internal system dimensions, intermediate calculation dimensions, or advanced dimensions intended only for power users who know the dimension names explicitly."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="defaultHierarchy" eType="#//Hierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the hierarchy that should be used as the default when queries reference this dimension without specifying a specific hierarchy. This provides a sensible default navigation path for the dimension and simplifies MDX query construction for end users. If not specified, the first hierarchy in the collection is typically used as the default."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DimensionConnector" eSuperTypes="#//IDimensionConnector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Connects a cube to a dimension, establishing the relationship between fact table and dimensional data through foreign key references and enabling dimensional analysis within the cube's multidimensional space."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="foreignKey" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to  to foreign key column in the fact table that references the primary key of the dimension table, establishing the relational link between fact data and dimensional context for OLAP analysis."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="usagePrefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional prefix that can be applied to this dimension when used in specific contexts or cubes. The usage prefix allows for dimension name customization and disambiguation when the same dimensional concept is used multiple times within a single analytical context, enabling scenarios like 'Ship Date' and 'Order Date' dimensions that share the same underlying time dimension structure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag controlling whether this dimension appears in client tool dimension lists, XMLA metadata discovery, and cube browsers. When false, the dimension becomes hidden from normal user interfaces but remains accessible through direct MDX references."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimension" lowerBound="1"
        eType="#//Dimension">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the dimension that this connector links to the cube. This establishes which analytical dimension (such as Time, Geography, Product, or Customer) is being connected to the cube's fact data through the foreign key relationship."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="overrideDimensionName"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional custom name for this dimension as it appears in this specific cube context. When specified, this name overrides the dimension's default name for display purposes in this cube, allowing the same dimension to appear with different names in different cubes for contextual clarity."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="level" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to a specific level within the dimension's hierarchy that should be used as the default level for this dimension connection. When specified, queries against this cube will default to this level rather than the dimension's natural default level."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for this DimensionConnector within the scope of its containing cube, serving as the primary key for this connector instance and enabling precise referencing in MDX queries, XMLA metadata, client applications, and system administration tools. The ID must be unique within all dimension connectors for a specific cube and should follow consistent naming conventions that support analytical application development and maintenance."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="physicalCube" lowerBound="1"
        eType="#//PhysicalCube" eOpposite="#//PhysicalCube/dimensionConnectors">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Bidirectional reference to the PhysicalCube that contains this dimension connector, establishing the containment relationship that defines which cube this dimensional connection belongs to and ensuring proper architectural integrity within the OLAP model structure. This required reference creates the fundamental relationship between cubes and their dimensional context, enabling the cube to access and manage its dimensional connections while providing the connector with access to cube-level properties, configuration settings, and metadata that influence dimensional behavior."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TimeDimension" eSuperTypes="#//Dimension #//ITimeDimension">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized dimension for temporal analysis, providing built-in support for time-based hierarchies (Year-Quarter-Month-Day), time intelligence calculations, and temporal navigation. TimeDimensions enable sophisticated time-based analytics including period-over-period comparisons, year-to-date calculations, and time-based filtering. The dimension automatically understands temporal relationships and provides optimized query performance for time-based operations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StandardDimension" eSuperTypes="#//Dimension #//IStandardDimension">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="General-purpose dimension for non-temporal analytical axes such as Geography, Product Categories, Customer Segments, or any other business classification hierarchy. StandardDimensions provide flexible hierarchical structures with configurable levels, member properties, and ordering rules that can model complex business taxonomies and support drill-down/drill-up navigation patterns."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Hierarchy" abstract="true" eSuperTypes="#//AbstractElement #//IHierarchy">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for OLAP hierarchies that organize dimension members into structured levels, enabling multidimensional analysis through drill-down, roll-up, and slice-and-dice operations. Hierarchies serve as navigational pathways through dimension data, organizing members from most detailed (leaf) to most aggregated (all member) levels. They support both explicit level-based structures and parent-child self-referencing relationships."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberReaderParameters"
        upperBound="-1" eType="#//MemberReaderParameter" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of custom parameters passed to the member reader implementation for controlling member loading behavior, caching strategies, and performance optimization. These parameters enable fine-tuning of hierarchy-specific behaviors like prefetch depth, cache size, and custom loading rules."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="allLevelName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Custom name for the All level when hasAll is true. If not specified, defaults to '(All)'. The All level represents the topmost aggregation level containing the single All member that aggregates all members in the hierarchy."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="allMemberCaption" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Display caption for the All member that appears in client tools and reports. This provides a user-friendly label that may differ from the internal allMemberName, supporting localization and business-friendly terminology."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="allMemberName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Name of the All member when hasAll is true. If not specified, defaults to 'All [HierarchyName]s'. The All member serves as the root aggregation member containing the sum of all members in the hierarchy."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultMember" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression identifying the default member used when this hierarchy is referenced in queries without an explicit member selection. If not specified, defaults to the All member (when hasAll=true) or the first member of the first level. This member serves as the implicit context for calculations and filtering."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayFolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional folder path for organizing this hierarchy in client tool dimension browsers and metadata trees. Supports hierarchical folder structures using forward slashes (e.g., 'Geography/Administrative') to create logical groupings for improved user experience and dimension organization."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="hasAll" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Controls whether this hierarchy includes an 'All' level containing a single member that aggregates all other members. When true (default), enables total aggregations and 'grand total' calculations. Time hierarchies often set this to false to prevent meaningless temporal aggregations across all time periods."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberReaderClass" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Fully qualified class name of a custom Java MemberReader implementation for loading hierarchy members. When specified, overrides the default member loading behavior to enable custom data sources, specialized caching strategies, security integration, or advanced member computation logic. The class must implement the MemberReader interface."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="origin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Source system identifier indicating the origin of this hierarchy definition. Used for provenance tracking, debugging, and managing hierarchies that originate from multiple source systems or schema generation processes. Helpful for maintaining data lineage in complex multi-source OLAP environments."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="primaryKey" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the database column that serves as the primary key for this hierarchy's main dimension table, establishing the unique identifier system that enables proper member identification, hierarchical relationships, and join operations across the dimensional model. The primary key column is fundamental to the hierarchy's data integrity and query performance, providing the basis for all member lookups, parent-child relationships, and cross-dimensional joins that enable multidimensional analysis."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uniqueKeyLevelName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Name of the level within this hierarchy that contains unique key values for member identification, establishing the granularity level where member keys become distinct and enabling proper member resolution in MDX queries, drill-through operations, and dimensional navigation scenarios. The unique key level defines the point in the hierarchical structure where member identification transitions from potentially shared keys at higher levels to guaranteed unique identifiers, which is crucial for maintaining data integrity."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="query" eType="#//Query">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the Query object that defines how hierarchy members are retrieved from the underlying data source, specifying the SQL logic, table relationships, and data transformation rules required to populate this hierarchy with members from the dimensional database structures. The query reference establishes the critical link between the logical hierarchy definition and the physical data sources, enabling sophisticated data integration scenarios where hierarchy members may be sourced from complex table joins, views, stored procedures, or federated data sources. "/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag controlling whether this hierarchy appears in client tool hierarchy browsers, XMLA metadata discovery responses, and dimensional navigation interfaces, enabling sophisticated visibility management for hierarchical structures that may need to be hidden from general users while remaining accessible for programmatic access and advanced analytical scenarios. When set to false, the hierarchy becomes invisible to standard user interfaces and metadata enumeration operations but remains fully functional for direct MDX references, programmatic queries, and system-level operations that explicitly reference the hierarchy by name."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Level" eSuperTypes="#//ILevel #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a group of members in a hierarchy, all at the same depth and sharing the same attributes and behavior patterns. Levels define the fundamental granularity layers within a dimension hierarchy that enable multidimensional analysis and navigation. For example, a Time dimension might contain levels like Year-Quarter-Month-Day, while a Geography dimension could have Country-State-City-ZipCode levels. Each level maps to specific database columns that provide member identification (key column), human-readable display (name column), localized captions (caption column), and custom sorting (ordinal column). Levels support various advanced features including member properties for additional attributes, custom formatters for display logic, data type specifications for proper SQL generation, uniqueness constraints for optimization, visibility controls for user interface management, and hiding conditions for handling ragged hierarchies and data quality issues. The level type attribute provides semantic meaning for specialized processing in time intelligence, geographic analysis, and business domain-specific operations."/>
    </eAnnotations>
    <eOperations name="getDataType" lowerBound="1" eType="#//InternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return InternalDataType.fromValue(getColumnType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getHideMemberIfType" lowerBound="1" eType="#//HideMemberIfType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return HideMemberIfType.fromValue(getHideMemberIf().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getLevelType" lowerBound="1" eType="#//LevelType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return LevelType.fromValue(getType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberProperties" upperBound="-1"
        eType="#//MemberProperty" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of additional properties that can be associated with members at this level, providing supplementary attributes beyond the basic key, name, and caption for enhanced analytical capabilities. Member properties enable rich dimensional analysis by exposing additional member characteristics such as demographic information (age, gender, income), geographic data (coordinates, postal codes, regions), financial attributes (account types, credit ratings, balances), temporal properties (start dates, durations, fiscal periods), or any domain-specific descriptive attributes. These properties are fully accessible in MDX queries through property functions, appear in client tool member browsers, support filtering and sorting operations, can be used in calculated members and measures, and enable advanced analytical scenarios like property-based aggregations, conditional formatting, and drill-through operations. Properties support various data types including strings, numbers, dates, and booleans, with optional custom formatters for display logic and functional dependency flags for query optimization."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberFormatter" eType="#//MemberFormatter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional custom formatter for controlling how members at this level are displayed in client tools and reports. The formatter can implement complex formatting logic, conditional styling, or custom string transformations based on member values and context."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="approxRowCount" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Approximate number of members expected at this level, used for query optimization and performance tuning. This hint helps the OLAP engine choose appropriate caching strategies, index usage, and memory allocation for efficient member loading and query execution."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="captionColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional column providing display captions for level members that may differ from the name column. Captions are typically used for localized or business-friendly display names while preserving technical names for internal processing. When not specified, the nameColumn or column value is used for display purposes."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Primary key column that uniquely identifies members at this level. This column provides the essential identity for each member and is used for joins, grouping, and member references in queries. It serves as both the key and default display value when nameColumn is not specified."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="hideMemberIf" eType="#//HideMemberIf">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Condition for hiding members from client tools and queries, useful for handling ragged hierarchies and data quality issues. Options include NEVER (all members visible), IF_BLANK_NAME (hide members with null/empty names), and IF_PARENTS_NAME (hide members whose name matches their parent's name)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//LevelDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Semantic type of this level indicating its role in business analysis. Types include temporal levels (TIME_YEARS, TIME_MONTHS, TIME_DAYS), geographic levels (GEO_COUNTRY, GEO_STATE, GEO_CITY), business levels (CUSTOMER, PRODUCT, ACCOUNT), and general REGULAR type. This metadata enables specialized behavior, validation, and client tool integration."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nameColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional column providing human-readable names for level members. When specified, this column supplies the display names used in client tools and reports, while the main column serves as the key. If not specified, the main column value is used for both key and display purposes."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ordinalColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional column providing sort order values for level members, overriding alphabetical sorting based on names. This enables custom member ordering such as chronological sequences, business hierarchies, or priority-based arrangements that don't follow natural string sorting."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="columnType" eType="#//ColumnInternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Data type of the primary column values, used for appropriate SQL generation, comparison operations, and display formatting. Supported types include STRING, INTEGER, NUMERIC, BOOLEAN, DATE, and others. This type information ensures proper handling of member keys in queries and aggregations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uniqueMembers" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating whether member names are globally unique across the entire hierarchy or only unique within their parent context. When true, enables query optimizations and simplified member referencing. Required for parent-child hierarchies where name uniqueness cannot be guaranteed within parent scope."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visible" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Controls whether this level appears in client tool level browsers, dimension trees, and metadata discovery. When false, the level becomes hidden from normal user interfaces but remains accessible for programmatic queries and advanced users who know the level name explicitly."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExplicitHierarchy" eSuperTypes="#//AbstractElement #//IExplicitHierarchy #//Hierarchy">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Hierarchy with explicitly defined levels organized in a fixed, predetermined structure. This is the most common hierarchy type, mapping to star schema and snowflake schema designs where levels correspond to dimension tables or normalized structures. ExplicitHierarchies provide optimal performance for predictable hierarchical structures and support complex multi-level drill-down operations with explicit level relationships defined through foreign keys."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="levels" lowerBound="1"
        upperBound="-1" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Ordered collection of levels that define the hierarchical structure from most aggregated to most detailed. The order determines the drill-down sequence and level relationships. Each level corresponds to a granularity of analysis (e.g., Country -> State -> City) and must be connected through appropriate foreign key relationships in the underlying queries."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParentChildHierarchy" eSuperTypes="#//AbstractElement #//IParentChildHierarchy #//Hierarchy">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Self-referencing hierarchy where members can have parent-child relationships within the same table, creating variable-depth structures. This hierarchy type is ideal for organizational charts, account hierarchies, or any structure where the depth varies by branch and members reference other members as parents. ParentChildHierarchies support recursive relationships and dynamic navigation without requiring fixed level definitions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentChildLink" eType="#//ParentChildLink"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional closure table configuration for performance optimization of parent-child queries. The closure table pre-computes all ancestor-descendant relationships, enabling efficient recursive queries and aggregations. When specified, provides significant performance benefits for deep hierarchies with complex drill-down operations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="nullParentValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="String value in the parent column that indicates root-level members (those without parents). Common values include '0', 'NULL', or empty string. This value identifies which members serve as the top-level roots of the hierarchy tree structure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Column containing the parent reference for each member, establishing the self-referencing relationship. This column typically contains the primary key value of the parent member, or the nullParentValue for root members. The column enables the recursive traversal that defines the hierarchy structure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentAsLeafEnable" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that allows intermediate parent members to also appear as leaf members, enabling scenarios where the same entity functions both as a container and as a data point. When true, parents can have their own measures and participate in aggregations at multiple levels. Commonly used in account hierarchies where summary accounts also contain direct transactions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentAsLeafNameFormat"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Format string for naming parent members when they appear as leaf nodes (used when parentAsLeafEnable=true). The format uses {0} as a placeholder for the original member name. Default format is '{0} (parent)' which creates names like 'Sales Manager (parent)' to distinguish the parent role from child member names."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="level" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Single level definition that applies to all members in this parent-child hierarchy. Unlike explicit hierarchies with multiple levels, parent-child hierarchies use one level definition that describes the properties and behavior of all members regardless of their position in the tree structure."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MemberProperty" eSuperTypes="#//AbstractElement #//IMemberProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines an additional attribute that can be associated with dimension members to provide supplementary information beyond the basic member identification, naming, and captioning. Member properties enable rich analytical capabilities by exposing detailed member characteristics such as demographic data, geographic coordinates, financial metrics, temporal attributes, or any domain-specific descriptive information. These properties are fully integrated into the OLAP infrastructure, appearing in MDX query results, client tool member browsers, and XMLA metadata discovery."/>
    </eAnnotations>
    <eOperations name="getDataType" lowerBound="1" eType="#//InternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return InternalDataType.fromValue(getPropertyType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="formatter" eType="#//MemberPropertyFormatter"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional custom formatter that controls how property values are displayed in client tools, reports, and user interfaces. The formatter can implement complex display logic including conditional formatting based on property values, custom string transformations, localized number and date formatting, unit conversions, or specialized business logic for domain-specific display requirements. When not specified, properties use default formatting based on their data type."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Database column or SQL expression that provides the property values for members at the associated level. This column must be accessible through the level's query context and should contain values that correspond to each member identified by the level's key column. The column can reference any table or view that is joined or accessible within the dimension's query structure, enabling properties to be sourced from lookup tables, calculated expressions, or denormalized dimension tables."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dependsOnLevelValue" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating whether this property value is functionally dependent on the level member key, meaning that each unique member key determines exactly one property value. When true, this optimization hint allows the OLAP engine to exclude the property column from GROUP BY clauses in generated SQL, improving query performance by reducing the number of grouping columns. This flag should only be set to true when there is a guaranteed one-to-one relationship between the level key and property value, such as when the property comes from the same table as the level key or from a properly normalized lookup table."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyType" eType="#//ColumnInternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Data type of the property values, essential for proper SQL generation, comparison operations, sorting behavior, and display formatting. Supported types include STRING for text values, INTEGER and NUMERIC for numerical data, BOOLEAN for true/false values, DATE/TIME/TIMESTAMP for temporal data, and other specialized types. The property type determines how values are compared in filters, how they are formatted for display, what aggregation functions are applicable, and how they are serialized in XMLA responses and MDX query results."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CalculatedMember" eSuperTypes="#//ICalculatedMember #//Member">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents sophisticated computed members that are dynamically calculated using MDX expressions, enabling powerful analytical capabilities including complex business logic, mathematical computations, conditional calculations, and cross-dimensional analysis that extend far beyond the capabilities of standard dimensional members stored in database tables. CalculatedMember provides the foundation for advanced analytical modeling where business requirements necessitate dynamic member creation based on complex formulas, business rules, or computational logic that cannot be pre-calculated and stored in traditional dimensional tables."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="formula" eType="#//Formula">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that defines the calculation logic for this computed member, encapsulating sophisticated business rules, mathematical formulations, and analytical computations that determine the member's value based on other measures, members, and dimensional context. The formula serves as the computational heart of the calculated member, enabling complex analytical scenarios including financial ratio calculations that combine multiple measures with mathematical operations, time-based calculations that implement period-over-period comparisons and trend analysis, conditional logic that applies different calculation rules based on dimensional attributes or member properties, and cross-dimensional calculations that aggregate or transform data across multiple analytical perspectives."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that identifies the parent member within the dimensional hierarchy where this calculated member should be positioned, establishing the hierarchical context and navigational placement that determines how the calculated member appears in dimensional browsers, OLAP client tools, and analytical applications. The parent specification enables sophisticated calculated member organization where computed members can be logically grouped with related dimensional concepts, positioned at appropriate hierarchical levels for intuitive user navigation, and integrated seamlessly with existing dimensional structures to provide cohesive analytical experiences."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hierarchy" eType="#//Hierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the Hierarchy within which this calculated member should be positioned, establishing the dimensional context that determines the member's analytical scope, navigational placement, and integration with existing hierarchical structures. The hierarchy reference defines the analytical domain where the calculated member will be available for selection, filtering, and navigation operations, ensuring that computed members integrate seamlessly with dimensional browsing, member selection, and hierarchical drill-down capabilities provided by OLAP client applications and business intelligence tools."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="physicalCube" lowerBound="1"
        eType="#//PhysicalCube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the PhysicalCube that contains and manages this calculated member, establishing the analytical context and data scope within which the calculated member operates and ensuring proper integration with the cube's dimensional structure, measure definitions, and query processing capabilities. The physical cube reference defines the analytical environment where the calculated member can access fact data, reference other measures and members, and participate in multidimensional analysis operations including slicing, dicing, drilling, and pivoting across the cube's dimensional space."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CalculatedMemberProperty" eSuperTypes="#//AbstractElement #//ICalculatedMemberProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines additional metadata properties and behavioral characteristics for calculated members, providing sophisticated customization capabilities that control how computed members appear, behave, and integrate within analytical applications and business intelligence tools. CalculatedMemberProperty enables advanced calculated member configuration where computed members can be enhanced with specialized attributes, formatting rules, display characteristics, and behavioral modifiers that optimize their presentation and functionality within different analytical contexts and user interface environments."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="expression" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="MDX expression that dynamically calculates the value of this calculated member property based on analytical context, dimensional relationships, and computational logic that can adapt to different query scenarios and data conditions. The expression provides sophisticated property value determination where calculated member properties can be computed based on current member context, related dimensional attributes, measure values, and complex business rules that reflect organizational policies and analytical requirements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Static string value for this calculated member property when dynamic expression evaluation is not required, providing a simple and efficient mechanism for setting fixed property values that do not change based on analytical context or computational logic. The static value approach is optimal for calculated member properties that have predetermined, unchanging characteristics such as fixed formatting specifications, constant display attributes, static descriptive text, or invariant behavioral flags that apply consistently across all analytical scenarios and usage contexts."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParentChildLink" eSuperTypes="#//IParentChildLink">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines closure table configuration for parent-child hierarchies that dramatically improves query performance by pre-computing and storing all ancestor-descendant relationships in a separate table structure, enabling efficient recursive queries and aggregations without requiring complex recursive SQL operations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" lowerBound="1" eType="#//TableQuery"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the TableQuery that defines the closure table structure used to store pre-computed ancestor-descendant relationships for this parent-child hierarchy, establishing the physical database table that contains the materialized hierarchical relationships necessary for efficient parent-child operations. The closure table represents a critical performance optimization strategy where all possible ancestor-descendant pairs are pre-calculated and stored in a dedicated table structure, enabling complex hierarchical queries and aggregations to be executed using simple SQL joins rather than expensive recursive operations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childColumn" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the database column in the closure table that stores the child member identifier in each ancestor-descendant relationship record, representing the descendant side of the hierarchical relationship and enabling efficient identification of all members that are children, grandchildren, or deeper descendants of any given parent member."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentColumn" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the database column in the closure table that stores the parent member identifier in each ancestor-descendant relationship record, representing the ancestor side of the hierarchical relationship and enabling efficient identification of all members that are parents, grandparents, or higher-level ancestors of any given child member. The parent column complements the child column to create complete ancestor-descendant relationship records that eliminate the need for recursive SQL operations during hierarchical navigation and aggregation processes, providing the foundation for high-performance parent-child analytical operations across complex organizational and taxonomic structures."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalQuery" abstract="true" eSuperTypes="#//Query #//IRelationalQuery">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for queries that produce relational result sets suitable for SQL generation and relational database operations. RelationalQuery extends the base Query with SQL aliasing capabilities, enabling proper table and column reference management in generated SQL statements. This class serves as the foundation for concrete query implementations that interact with relational databases, including direct table access, custom SQL views, and in-memory relational data structures. The relational nature enables standard SQL operations like joins, filtering, grouping, and sorting, while maintaining compatibility with OLAP-specific requirements like dimension member loading, hierarchy navigation, and measure aggregation."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="alias" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional SQL table alias for this query when used in joins or complex SQL statements. The alias provides a short, unique identifier that can be referenced in column expressions, WHERE clauses, and join conditions, enabling clear and unambiguous SQL generation especially when the same table appears multiple times in a query or when working with long table names. When not specified, the OLAP engine may generate automatic aliases based on the query ID or table name to ensure SQL correctness."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InlineTableQuery" eSuperTypes="#//RelationalQuery #//IInlineTableQuery">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Provides access to in-memory tabular data that is embedded directly within the OLAP model definition, eliminating the need for external database tables for small, static datasets. InlineTableQuery is ideal for configuration data, lookup tables, reference lists, and small dimensional data that rarely changes and can be efficiently stored within the model itself. This query type enables self-contained OLAP models that don't require external database dependencies for certain data sources, simplifying deployment and maintenance while providing optimal performance for frequently accessed small datasets that can be cached in memory."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" lowerBound="1" eType="#//InlineTable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the inline table definition that contains the embedded data rows and column schema. The inline table provides both the structural definition (column names and types) and the actual data content (rows with cell values) needed for query processing. This self-contained approach enables the OLAP engine to access the data without database round-trips, providing optimal performance for small reference datasets and configuration information."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JoinQuery" eSuperTypes="#//Query #//IJoinQuery">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a JOIN operation between two queries, enabling the combination of data from multiple sources through relational key-based connections. JoinQuery is essential for implementing snowflake schema patterns, multi-table hierarchies, and complex dimensional relationships where dimension data is normalized across multiple tables. The query supports composable join trees where the left or right side can itself be another JoinQuery, enabling arbitrarily complex multi-table relationships. JoinQuery automatically generates appropriate SQL JOIN syntax (typically INNER JOIN) based on the key columns specified in the left and right query elements, ensuring proper relational connectivity while maintaining optimal query performance through the OLAP engine's SQL generation and optimization capabilities."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" eType="#//JoinedQueryElement"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Left side participant in the JOIN operation, specifying the query, join key column, and optional table alias. The left query element typically represents the more detailed or child table in hierarchical relationships, such as a city table in a geography hierarchy or a detailed dimension table in a snowflake schema. The join key column must be compatible with the right side's key column for proper relational connection."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1" eType="#//JoinedQueryElement"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Right side participant in the JOIN operation, specifying the query, join key column, and optional table alias. The right query element typically represents the more aggregated or parent table in hierarchical relationships, such as a country table in a geography hierarchy or a lookup table in a snowflake schema. The join key column must be compatible with the left side's key column for proper relational connection."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JoinedQueryElement" eSuperTypes="#//IJoinedQueryElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents one side of a JOIN operation, encapsulating the query source, join key column, and optional table alias needed for proper SQL JOIN generation. JoinedQueryElement serves as the fundamental building block for composing complex multi-table queries in OLAP dimensional modeling, enabling the connection of normalized dimension tables, fact tables, and lookup tables through foreign key relationships. Each element specifies exactly how its query participates in the JOIN operation, including which column serves as the join key and what alias should be used in the generated SQL to avoid naming conflicts and ensure query clarity."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="alias" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional SQL table alias for this query element when used in JOIN operations. The alias provides a unique, short identifier that can be referenced in column expressions, WHERE clauses, and nested join conditions, preventing naming conflicts when the same table appears multiple times in complex queries or when working with long table names. If not specified, the OLAP engine may generate automatic aliases based on query IDs or table names to ensure SQL correctness and readability."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="key" lowerBound="1" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Column that serves as the join key for connecting this query element to its JOIN partner. The key column must contain values that can be matched with the corresponding key column from the other side of the JOIN operation, typically representing a foreign key to primary key relationship. The column must be accessible within the query's result set and have compatible data types with its JOIN partner to ensure proper relational connectivity and optimal query performance."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="query" lowerBound="1" eType="#//Query">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the query that provides the data source for this side of the JOIN operation. The query can be any type from the Query hierarchy including TableQuery for direct table access, JoinQuery for nested join operations, SqlSelectQuery for custom SQL views, or InlineTableQuery for in-memory data. This composable design enables complex query trees where joins can be nested and combined to create sophisticated data access patterns for advanced dimensional modeling scenarios."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TableQuery" eSuperTypes="#//RelationalQuery #//ITableQuery">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a direct query against a physical database table, providing the most common and straightforward data access pattern in OLAP applications. TableQuery serves as the foundation for fact table access, dimension table queries, and lookup table operations, enabling the OLAP engine to generate optimized SQL SELECT statements with appropriate filtering, grouping, and sorting. The query supports advanced performance features including custom WHERE clauses for data filtering, aggregation table specifications for pre-computed summaries, database-specific optimization hints for query tuning, and aggregation exclusion rules for controlling when summary tables should not be used. TableQuery is essential for both star schema and snowflake schema implementations, providing the direct table access needed for member loading, measure aggregation, and dimensional navigation."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sqlWhereExpression" eType="#//SqlStatement"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional SQL WHERE clause expression that filters the table data before processing by the OLAP engine. This enables pre-filtering of large tables to improve performance, restrict data access based on security requirements, or limit analysis to specific business contexts such as current fiscal year data, active customers, or specific product categories. The WHERE expression is integrated into the generated SQL and can reference any columns available in the table, supporting complex filtering logic including subqueries, functions, and multi-condition expressions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationExcludes" upperBound="-1"
        eType="#//AggregationExclude" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of rules that specify when aggregation tables should not be used for this query, providing fine-grained control over performance optimization strategies. Aggregation exclusion rules can be based on specific cube contexts, measure combinations, or query patterns where using pre-computed aggregations would be inappropriate or incorrect. This feature is essential for maintaining data accuracy in scenarios where aggregation tables may not contain all necessary detail or where real-time data access is required despite performance implications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="optimizationHints" upperBound="-1"
        eType="#//TableQueryOptimizationHint" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of database-specific optimization hints that can be embedded in generated SQL queries to influence query execution plans, indexing strategies, and performance characteristics. Optimization hints enable fine-tuning of query performance for specific database systems and can include instructions for index usage, join algorithms, parallel processing, or memory allocation. These hints are particularly valuable for large-scale OLAP deployments where query performance is critical and database-specific tuning is required."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationTables" upperBound="-1"
        eType="#//AggregationTable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of pre-computed aggregation tables that can be used to accelerate queries against this table by providing pre-calculated summaries at various levels of granularity. Aggregation tables contain rolled-up measures and dimension keys that enable the OLAP engine to answer queries from summary data rather than processing detailed facts, significantly improving query performance for common analytical scenarios. The OLAP engine automatically selects the most appropriate aggregation table based on query requirements and availability."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" lowerBound="1" eType="#//Table">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the physical database table that serves as the data source for this query. The table provides the schema definition including column names, data types, and structural information needed for proper SQL generation and data access. The table reference establishes the foundation for all data operations and must be accessible within the database schema context defined by the OLAP catalog configuration."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TableQueryOptimizationHint" eSuperTypes="#//ITableQueryOptimizationHint">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Provides database-specific optimization hints that can be embedded in generated SQL queries to influence query execution plans, performance characteristics, and resource utilization patterns for optimal analytical query performance."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Database-specific hint value that contains the actual optimization instruction or parameter that will be embedded in generated SQL statements. The value format and syntax depends on the database platform and hint type, enabling precise control over database query execution behavior. Common hint values include index names for index usage hints, join algorithm specifications for join strategy hints, parallel degree numbers for parallel processing hints, and memory size specifications for resource allocation hints. The value enables fine-grained performance tuning that can adapt to specific database configurations, data volumes, and performance requirements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Classification of the optimization hint that determines how the hint value should be interpreted and applied during SQL generation. The type enables the OLAP engine to properly format and position hints within generated SQL statements according to database-specific syntax requirements. Common hint types include index hints for controlling index usage, join hints for specifying join algorithms, parallel hints for enabling parallel query execution, and cache hints for controlling result caching behavior. The type ensures that optimization hints are applied correctly across different database platforms and query patterns."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SqlSelectQuery" eSuperTypes="#//RelationalQuery #//ISqlSelectQuery">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Wraps custom SQL SELECT statements as query sources, enabling the integration of complex business logic, database views, stored procedures, and advanced SQL constructs that cannot be expressed through standard table or join queries. SqlSelectQuery provides the flexibility to incorporate sophisticated data transformations, conditional logic, window functions, and database-specific features while maintaining compatibility with the OLAP engine's SQL generation and optimization capabilities. This query type is essential for scenarios requiring custom data preparation, complex calculations, legacy system integration, or advanced analytical functions that extend beyond standard relational operations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sql" lowerBound="1" eType="#//SqlView"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Contains the custom SQL SELECT statement definition that provides the data for this query. The SqlView encapsulates the SQL text along with database dialect specifications, enabling the same logical query to have different implementations for different database systems. The SQL statement must produce a result set with consistent column names and data types that can be referenced by other OLAP model elements such as levels, measures, and member properties."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MemberReaderParameter" eSuperTypes="#//IMemberReaderParameter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines configuration parameters that are passed to custom MemberReader implementations to control specialized member loading behavior, caching strategies, performance optimization, and integration with external data sources or business logic systems. MemberReaderParameter represents a flexible configuration mechanism that enables sophisticated customization of how dimensional members are loaded, cached, and presented within OLAP hierarchies, supporting advanced scenarios where standard member loading approaches are insufficient for complex business requirements, performance constraints, or integration needs."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Parameter name that identifies the specific configuration setting that this parameter controls within the custom MemberReader implementation. The name serves as the key for parameter lookup and must correspond to parameter names that are recognized and processed by the associated MemberReader class. Common parameter names include cache size settings, connection configuration, security context identifiers, performance tuning options, and business rule specifications that influence member loading behavior. The parameter name enables flexible, extensible configuration where different MemberReader implementations can support different sets of configuration options while maintaining consistent parameter passing mechanisms."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Parameter value that provides the specific configuration setting or data that the MemberReader implementation will use to customize its behavior. The value format and interpretation depends on the parameter name and the MemberReader implementation, enabling flexible configuration that can include numeric settings, string values, connection strings, file paths, or complex configuration expressions."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Translation" eSuperTypes="#//ITranslation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Provides comprehensive internationalization and localization support for OLAP metadata elements, enabling multi-language deployments where analytical content can be presented in different languages based on user preferences, regional requirements, or organizational policies. Translation represents a fundamental component of the OLAP globalization framework, supporting complex multinational enterprise scenarios where the same analytical model must serve users who speak different languages and operate within different cultural contexts."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//UnsignedInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Language identifier specified as a Windows LCID (Locale Identifier) that uniquely determines the target language and cultural context for this translation. The LCID encompasses both language and regional variations, enabling precise localization that accounts for cultural differences within the same language family, such as distinguishing between US English (1033), UK English (2057), Canadian French (3084), and France French (1036). This approach ensures that translations can address not only linguistic differences but also cultural formatting preferences, business terminology variations, and region-specific regulatory requirements. The LCID system supports comprehensive globalization scenarios including multinational corporations that operate in multiple regions with the same language but different business practices, regulatory environments that require specific terminology in official languages, and user experience customization where individuals can select their preferred cultural context even when working with the same underlying analytical data and business logic."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="caption" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Localized display caption that appears in client tools, reports, and user interfaces for the associated OLAP element in the specified language. The caption provides the primary user-visible text that represents the element in analytical tools, dimension browsers, measure lists, and other user-facing components of the OLAP system. This translation capability enables sophisticated multilingual user experiences where the same analytical model can present familiar, culturally appropriate terminology to users in different regions while maintaining consistent underlying business logic and data structures. Caption translations support complex business scenarios including global brand management where product names may vary by region, organizational terminology where department or role names reflect local business structures, financial reporting where account names must conform to local accounting standards, and customer-facing analytics where terminology must align with local market communication strategies."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Detailed localized description that provides comprehensive explanatory text for the OLAP element in the specified language, supporting user training, system documentation, and contextual help within analytical applications. Descriptions enable rich multilingual metadata that goes beyond simple captions to provide detailed explanations of business concepts, calculation methodologies, data sources, and usage guidelines that help users understand and effectively utilize analytical resources. This descriptive translation capability is particularly valuable for complex analytical models where users need detailed explanations of sophisticated calculations, business rules, data quality considerations, and appropriate usage contexts. Localized descriptions support advanced user assistance scenarios including self-service analytics where users need detailed guidance to navigate complex dimensional models, regulatory compliance documentation where calculation methodologies must be explained in official languages, training and onboarding programs where new users need comprehensive explanations of analytical concepts, and administrative documentation where system operators need detailed metadata for maintenance and troubleshooting purposes."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayFolder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Localized organizational folder path that determines how the OLAP element is categorized and presented within client tool navigation structures for the specified language and cultural context. Display folders enable culturally appropriate organizational schemes where the logical grouping and categorization of analytical elements reflects local business practices, terminology preferences, and organizational structures that may vary significantly across different regions and cultures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of Annotation objects that provide additional metadata, custom properties, and extensibility mechanisms for this translation, enabling sophisticated translation management capabilities that support advanced localization requirements, workflow integration, and specialized translation processing scenarios. Translation annotations enable comprehensive metadata management where translation entries can be enhanced with quality assurance information, approval workflow states, source system references, translation version tracking, and cultural adaptation notes that support professional translation management processes in large-scale multinational analytical deployments."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Formula" instanceClassName="java.lang.String">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized string data type that represents MDX (Multidimensional Expressions) formulas and computational expressions used throughout the OLAP framework for defining sophisticated analytical calculations, business logic, and data transformation rules. Formula provides a strongly-typed foundation for MDX expressions that enables precise analytical modeling where complex business calculations can be expressed using the full power of the MDX language including hierarchical navigation, set operations, statistical functions, conditional logic, and cross-dimensional analysis capabilities."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Formatter" abstract="true" eSuperTypes="#//AbstractElement #//IFormatter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for sophisticated display formatting components that control how analytical values, dimensional members, and other OLAP elements are presented to users in client applications, reports, and dashboards."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ref" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference identifier that enables sharing and reuse of formatter definitions across multiple OLAP elements, supporting efficient formatter management and consistent presentation styling throughout analytical applications."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CellFormatter" eSuperTypes="#//Formatter #//ICellFormatter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized formatter for controlling the presentation of cell values in analytical grids, pivot tables, and other tabular presentations, providing sophisticated capabilities for transforming raw measure values into compelling, contextually appropriate visual displays that enhance user comprehension and support effective business communication."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MemberFormatter" eSuperTypes="#//Formatter #//IMemberFormatter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized formatter for controlling how dimensional members are displayed in hierarchical browsers, filter lists, axis labels, and other dimensional navigation interfaces, enabling sophisticated member presentation that can include custom naming schemes, contextual information, visual indicators, and hierarchical styling that enhances dimensional navigation and member selection experiences."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MemberPropertyFormatter" eSuperTypes="#//Formatter #//IMemberPropertyFormatter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized formatter for controlling the presentation of member properties in dimensional browsers, tooltip displays, drill-through results, and other contexts where additional member attributes need to be presented in user-friendly, contextually appropriate formats."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//IParameter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a parameterized input mechanism that enables dynamic, user-driven customization of analytical queries, calculated members, and other OLAP expressions, providing sophisticated capabilities for creating flexible, interactive analytical applications that can adapt to user preferences and changing business requirements."/>
    </eAnnotations>
    <eOperations name="getType" eType="#//InternalDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return InternalDataType.fromValue(getDataType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Default parameter value that is automatically applied when users do not explicitly specify a parameter value, ensuring that parameterized analytical applications function correctly and provide meaningful results even when parameters are not explicitly set by end users."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Detailed explanatory text that describes the parameter's purpose, expected values, impact on analytical results, and usage guidelines, providing essential user guidance that enables effective parameter utilization in self-service analytical applications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="modifiable" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag controlling whether end users can modify this parameter's value through client interfaces, enabling sophisticated parameter governance scenarios where certain parameters can be locked to maintain analytical consistency, security, or compliance requirements while still allowing user customization of other parameters"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for this parameter that serves as both the technical reference used in MDX expressions and calculated members, and the basis for user-facing parameter labels in client applications and analytical interfaces."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dataType" lowerBound="1"
        eType="#//ColumnInternalDataType" defaultValueLiteral="String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Data type specification that defines the expected format and validation requirements for parameter values, ensuring type safety, input validation, and appropriate client interface generation for parameter entry and manipulation. The data type establishes the fundamental parameter characteristics that determine how parameter values are processed, validated, and integrated into analytical calculations, supporting sophisticated parameter systems where type-specific behavior enables optimal user experiences and analytical accuracy."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Action" eSuperTypes="#//AbstractElement #//IAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for interactive actions that provide sophisticated user engagement capabilities within OLAP applications, enabling context-sensitive operations that can launch external applications, navigate to related content, execute business processes, or provide additional analytical functionality based on the user's current analytical context."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DrillThroughAction" eSuperTypes="#//Action #//IDrillThroughAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specialized action that enables users to drill through from aggregated analytical views to the underlying detailed transaction data that contributed to specific measure values, providing powerful capabilities for data exploration, validation, and detailed investigation of analytical results. DrillThroughAction represents one of the most valuable interactive features in modern OLAP applications, enabling users to seamlessly transition from high-level analytical summaries to detailed operational data without losing analytical context or requiring technical knowledge of underlying data structures."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="drillThroughAttribute"
        upperBound="-1" eType="#//DrillThroughAttribute" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of DrillThroughAttribute objects that specify which dimensional attributes and descriptive columns should be included in drill-through result sets, providing sophisticated control over the detailed data presentation that enables users to access relevant contextual information alongside transactional data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="drillThroughMeasure" upperBound="-1"
        eType="#//BaseMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of BaseMeasure references that specify which measures should be included in drill-through result sets, enabling sophisticated control over the quantitative data presentation that provides users with relevant numeric context alongside detailed transactional information."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating whether this drill-through action serves as the default drill-through operation for the associated analytical context, automatically invoked when users perform standard drill-through gestures without explicitly selecting a specific drill-through action. The default setting enables intuitive user experiences where common drill-through operations are immediately accessible through standard user interface interactions such as double-clicking on measure values, right-click context menus, or dedicated drill-through buttons, while still allowing multiple specialized drill-through actions to be available for advanced scenarios."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DrillThroughAttribute" eSuperTypes="#//IDrillThroughAttribute">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a dimensional attribute or member property that should be included in drill-through result sets, providing sophisticated control over the contextual information that accompanies detailed transactional data when users drill through from aggregated analytical views. DrillThroughAttribute enables rich drill-through experiences where users can access not only the underlying fact data but also relevant dimensional context that provides business meaning and analytical insight into the detailed results."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="property" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Name of the specific member property within the associated dimension or hierarchy that should be included in drill-through result sets, enabling precise selection of individual attribute values that provide meaningful business context for detailed data analysis. The property specification allows drill-through results to include specific member characteristics such as descriptive names, business codes, category classifications, or other dimensional attributes that help users understand and interpret the underlying transactional data within its proper business context."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimension" lowerBound="1"
        eType="#//Dimension">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the Dimension that contains the attribute or property to be included in drill-through results, establishing the dimensional context that determines which member attributes are available for inclusion in detailed result sets. The dimension reference defines the analytical domain from which attribute values will be extracted, ensuring that drill-through results can include relevant dimensional context that provides business meaning and interpretive value for the underlying transactional data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hierarchy" eType="#//Hierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to a specific Hierarchy within the associated dimension that narrows the scope of attribute selection, enabling precise control over which hierarchical context should be used when including dimensional attributes in drill-through results."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="level" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to a specific Level within the associated hierarchy that further refines the granularity of attribute selection, enabling precise control over which hierarchical level should provide the attribute values for drill-through results."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WritebackAttribute" eSuperTypes="#//IWritebackAttribute">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a dimensional attribute that participates in writeback operations, enabling sophisticated data modification scenarios where users can update dimensional context information alongside measure values through interactive OLAP applications. WritebackAttribute represents a critical component of advanced business intelligence systems that support collaborative planning, budgeting, forecasting, and other scenarios where analytical applications must enable direct data modification rather than read-only consumption."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the database Column that stores the dimensional attribute values that can be modified through writeback operations, establishing the physical data storage location that will receive updated values when users perform dimensional data modifications through analytical applications. The column reference defines the specific database field that will be updated during writeback operations, ensuring that dimensional changes are properly persisted to the underlying data storage while maintaining referential integrity and data consistency across the analytical system."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensionConnector" lowerBound="1"
        eType="#//DimensionConnector">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the DimensionConnector that defines the relationship between this writeback attribute and the cube's dimensional structure, establishing the analytical context that determines how dimensional attribute modifications are integrated with the cube's multidimensional model and fact data relationships."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WritebackMeasure" eSuperTypes="#//IWritebackMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a measure that participates in writeback operations, enabling sophisticated collaborative planning, budgeting, forecasting, and analytical data modification scenarios where business users can directly update measure values through OLAP client applications and have those changes automatically persisted to designated database tables."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the database Column that stores the measure values that can be modified through writeback operations, establishing the physical data storage location where updated measure values will be persisted when users perform analytical data modifications."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical name identifier for the measure that will be modified through writeback operations. This name is used to reference the measure in allocation policies and writeback procedures, corresponding to the measure definition in the cube schema."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WritebackTable" eSuperTypes="#//IWritebackTable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines the physical database table structure that receives modified analytical data when users perform writeback operations. Maps cube measures and dimensional attributes to specific database columns where user modifications are persisted. Required for cubes that support data modification through OLAP interfaces. Integrates with WritebackUtil for SQL generation and allocation policy processing."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writebackAttribute" upperBound="-1"
        eType="#//WritebackAttribute" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of dimensional attributes that will be included in writeback operations. Each WritebackAttribute maps a dimension's members to database columns in the writeback table. Used to maintain dimensional context when persisting modified measure values."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writebackMeasure" upperBound="-1"
        eType="#//WritebackMeasure" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of measures that can be modified through writeback operations. Each WritebackMeasure maps a cube measure to a database column where modified values are stored. Supports allocation policies (equal, weighted, increment) for distributing values across atomic cells."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Database table name where writeback data is stored. Used by WritebackUtil.commit() to generate SQL INSERT statements. Must contain columns matching the WritebackMeasure and WritebackAttribute definitions plus system columns (ID, USER)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="schema" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional database schema name qualifying the writeback table. When specified, used to construct fully qualified table names in SQL statements. Supports database environments requiring schema-based table organization."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationExclude" eSuperTypes="#//IAggregationExclude">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines exclusion rules that prevent specific tables from being used as aggregation tables, even if they would otherwise match aggregation patterns or be considered suitable for aggregation optimization. AggregationExclude is essential for maintaining aggregation accuracy and system reliability by providing explicit control over which tables should be avoided during aggregation table discovery and selection."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignorecase" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether table name matching for this exclusion rule should be case-sensitive or case-insensitive. When set to true, the exclusion matching will ignore case differences, making exclusion rules more robust in environments with inconsistent case usage in table names or when working with databases that have varying case sensitivity behaviors."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Exact table name that should be excluded from aggregation table consideration. When specified, this provides precise exclusion control for specific known tables that should never be used for aggregation, regardless of whether they match aggregation patterns or appear to contain suitable aggregation data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="pattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Regular expression pattern that defines categories of tables that should be excluded from aggregation table consideration. Pattern-based exclusion enables efficient handling of multiple related tables that share common naming characteristics but should not be used for aggregation purposes. Common exclusion patterns include temporary table prefixes like 'TEMP_.*', backup table suffixes like '.*_BACKUP', or version-specific patterns like '.*_V[0-9]+' for excluding older versions of aggregation tables. The pattern approach is particularly valuable in dynamic environments where problematic tables are created regularly with predictable naming conventions, enabling proactive exclusion without requiring individual configuration for each new table. Pattern matching respects the ignorecase setting for consistent behavior across the exclusion rule."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for the writeback table that enables unambiguous reference and management within the cube schema and database persistence layer."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationForeignKey" eSuperTypes="#//IAggregationForeignKey">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines column relationships between aggregation tables and fact tables that enable query optimization through transparent fact-to-aggregation table substitution. Maps foreign key columns in aggregation tables to their corresponding columns in fact tables, maintaining referential integrity and dimensional relationships for performance-optimized OLAP query processing."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationColumn" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the foreign key column in the aggregation table that corresponds to a dimension key. This column maintains dimensional relationships in the pre-aggregated data, enabling proper joins with dimension tables during query processing and supporting transparent substitution of fact table queries with optimized aggregation table queries."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="factColumn" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the original foreign key column in the fact table that this aggregation column represents. This mapping enables the OLAP engine to understand the correspondence between fact and aggregation table structures, supporting query rewriting where fact table foreign key references are substituted with their aggregation table equivalents while maintaining proper dimensional relationships and join semantics."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationLevel" eSuperTypes="#//IAggregationLevel">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Maps a dimension level to a column in an aggregation table, defining how dimensional data is represented in pre-computed aggregation structures. AggregationLevel is fundamental to the aggregation matching algorithm, enabling the OLAP engine to determine whether a specific aggregation table contains the appropriate dimensional granularity to satisfy query requirements. Each mapping specifies the relationship between a logical dimension level (such as Product Category, Time Month, or Customer Region) and the physical column in the aggregation table that stores the corresponding dimension key values."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationLevelProperties"
        upperBound="-1" eType="#//AggregationLevelProperty" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of property mappings that define how level properties are represented in the aggregation table. Each AggregationLevelProperty maps a level property (such as member captions, descriptions, or custom attributes) to its corresponding column in the aggregation table, enabling rich dimensional data access in aggregated queries."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="captionColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to the column in the aggregation table that contains member caption values for this level. Caption columns provide user-friendly display names that can be shown in analytical interfaces instead of the technical key values."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="collapsed" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating whether this aggregation level represents a collapsed hierarchy level. When true, intermediate hierarchy levels are omitted in the aggregation table, allowing queries to roll up directly to higher levels without requiring intermediate level data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the column in the aggregation table that stores the key values for this dimension level. This column contains the dimension member keys that correspond to the level definition, enabling proper aggregation matching and query optimization."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required name identifier for the dimension level that this aggregation level represents. This name must correspond to a level defined in the cube schema, enabling the aggregation matching algorithm to identify appropriate aggregations for queries involving this level."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nameColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to the column in the aggregation table that contains member name values for this level. Name columns provide alternative identification for dimension members beyond the primary key column."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ordinalColumn" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to the column in the aggregation table that contains ordinal values for level members. Ordinal columns provide explicit sort ordering for dimension members, enabling consistent member ordering in analytical results and user interfaces."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationLevelProperty" eSuperTypes="#//IAggregationLevelProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Maps a level property to its corresponding column in an aggregation table, enabling access to dimensional member properties in aggregated queries. Level properties provide additional descriptive information about dimension members beyond their keys and names, such as member descriptions, custom attributes, or categorization data."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the column in the aggregation table that stores the property values. This column contains the actual property data that corresponds to the level property definition in the cube schema."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required name identifier for the level property that this aggregation level property represents. This name must correspond to a property defined in the level schema, enabling proper property access in aggregated queries."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationMeasure" eSuperTypes="#//IAggregationMeasure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Maps a cube measure to a column in an aggregation table that contains pre-computed aggregated values for that measure. AggregationMeasure is central to the performance optimization provided by aggregation tables, enabling the OLAP engine to substitute pre-calculated summary values for expensive fact table aggregations. Each mapping defines the relationship between a logical measure (such as Sales Amount, Quantity Sold, or Profit Margin) and the physical column in the aggregation table that stores the corresponding aggregated values. The mapping includes critical information about rollup behavior, specifying how aggregated values can be further combined when rolling up to higher levels of granularity. This supports complex aggregation scenarios including additive measures that use SUM rollup, semi-additive measures that require special handling across time dimensions, non-additive measures like ratios that need weighted averaging, and distinct count measures that have strict rollup requirements to maintain accuracy."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the aggregation table column that contains the pre-computed aggregated values for this measure. The column must contain numeric data that represents the measure values aggregated according to the granularity defined by the aggregation table's level mappings. The data type and precision of this column should be appropriate for the measure's value range and the aggregation function used, ensuring that no precision is lost during aggregation operations and that the values can be further aggregated if rollup operations are required. The column should be indexed appropriately to support efficient querying when the aggregation table is used in place of fact table scans."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Name of the cube measure that this aggregation measure mapping represents, typically specified in MDX notation such as '[Measures].[Sales Amount]' or '[Measures].[Unit Sales]'. This name must exactly match the measure name defined in the cube's measure group to ensure proper correlation between the logical measure definition and the aggregated data stored in the aggregation table. The name serves as the key for the aggregation matching algorithm to determine whether this aggregation table contains pre-computed values for measures required by a query, enabling the OLAP engine to substitute aggregation table access for fact table aggregation operations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="rollupType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the aggregation function that should be used when rolling up this measure to higher levels of granularity, determining how pre-aggregated values can be further combined when the aggregation table contains more detailed data than required by a query. Common rollup types include 'Sum' for additive measures like sales amounts and quantities, 'Avg' for measures that should be averaged when rolled up, 'Min' and 'Max' for measures where extreme values are meaningful, and 'Count' for counting measures. The rollup type must be compatible with the measure's semantic meaning and the aggregation function originally used to create the aggregated values. Special handling is required for distinct count measures and complex calculated measures that may not support standard rollup operations."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationMeasureFactCount" eSuperTypes="#//IAggregationMeasureFactCount">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines the fact count measure in an aggregation table that tracks the number of fact table rows contributing to each aggregated row. The fact count is essential for computing accurate averages, weighted calculations, and other statistical operations that require knowledge of the underlying data density."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the column in the aggregation table that stores the fact count values. This column contains the number of fact table rows that were aggregated to produce each aggregated row."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="factColumn" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to a column in the fact table that is used as the basis for counting fact table rows. Typically references a non-null column in the fact table to ensure accurate row counting."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationTable" abstract="true" eSuperTypes="#//IAggregationTable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for pre-computed aggregation tables that dramatically improve OLAP query performance by storing pre-calculated summary data at various levels of granularity. Aggregation tables contain rolled-up measures and dimension keys that enable the OLAP engine to answer analytical queries from summary data rather than scanning millions of fact table rows."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationFactCount" lowerBound="1"
        eType="#//AggregationColumnName" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required column that contains the count of fact table rows that were aggregated to produce each summary row in the aggregation table. The fact count is essential for data validation, debugging aggregation correctness, and enabling proper rollup operations when combining data from multiple aggregation levels. This count helps verify that aggregation calculations are accurate and provides metadata for understanding the density and coverage of aggregated data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationIgnoreColumns"
        upperBound="-1" eType="#//AggregationColumnName" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of columns in the aggregation table that should be ignored during aggregation matching and query processing. These columns may contain metadata, audit information, or derived values that are not relevant for OLAP operations but exist in the aggregation table for administrative purposes. Ignoring irrelevant columns helps the aggregation matching algorithm focus on the essential data columns and prevents spurious match failures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationForeignKeys"
        upperBound="-1" eType="#//AggregationForeignKey" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of foreign key mappings that define the relationships between columns in the aggregation table and corresponding columns in the fact table. These mappings are crucial for ensuring that the OLAP engine can correctly correlate aggregated data with fact table structures, validate constraint compatibility, and generate proper SQL joins when aggregation tables are used in query processing. Foreign key mappings enable complex aggregation scenarios where dimension keys may be stored differently in aggregation tables compared to fact tables."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationMeasures" lowerBound="1"
        upperBound="-1" eType="#//AggregationMeasure" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of measure mappings that define how pre-aggregated measure values in the aggregation table correspond to measures in the fact table and cube definition. Each AggregationMeasure specifies the measure name, the aggregation table column containing the pre-computed values, and the rollup type (SUM, AVG, COUNT, etc.) that determines how values can be further aggregated when rolling up to higher levels."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationLevels" upperBound="-1"
        eType="#//AggregationLevel" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of dimension level mappings that specify which dimensional granularities are represented in this aggregation table and how they map to aggregation table columns. Each AggregationLevel defines the connection between a dimension level (such as Product Category, Time Month, or Geography State) and the corresponding column in the aggregation table that contains the level's key values."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregationMeasureFactCounts"
        upperBound="-1" eType="#//AggregationMeasureFactCount" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of specialized fact count mappings for individual measures that require separate counting logic or validation. While the main aggregationFactCount provides an overall row count for the aggregation, AggregationMeasureFactCount entries enable measure-specific fact counting scenarios such as handling null values, distinct count validation, or weighted fact counting for complex measures. This is particularly important for aggregations containing multiple measures with different data availability patterns, where each measure may have been calculated from a different number of source fact records due to null value handling, data filtering, or conditional aggregation logic. These specialized counts support advanced aggregation validation, debugging, and rollup accuracy verification."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignorecase" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag that controls whether string comparisons during aggregation table matching and name resolution should be case-sensitive or case-insensitive. When set to true, the aggregation matching algorithm will treat table names, column names, and string-based identifiers in a case-insensitive manner, which is particularly useful in environments with inconsistent naming conventions or when working with databases that have varying case sensitivity behaviors. This setting affects how aggregation patterns match table names, how column mappings are resolved, and how the OLAP engine correlates aggregation table elements with fact table and cube definitions. Case-insensitive matching can improve robustness in heterogeneous environments but should be used carefully to avoid ambiguous matches."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for this aggregation table within the catalog scope, serving as the primary key for referencing this aggregation definition from other OLAP model elements and internal system operations. The ID is used by the aggregation matching algorithm to track which aggregations have been evaluated, by logging and debugging systems to identify specific aggregation tables in performance analysis, and by administrative tools for aggregation management and monitoring. A well-chosen ID should be descriptive enough to identify the aggregation's purpose and scope while remaining concise for system efficiency, such as 'ProductMonthlySales' or 'CustomerRegionSummary'."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationName" eSuperTypes="#//AggregationTable #//IAggregationName">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Concrete aggregation table implementation that explicitly specifies a named database table containing pre-computed aggregation data. AggregationName provides direct, deterministic mapping to a specific aggregation table, making it ideal for environments with well-defined, stable aggregation strategies where table names are known in advance. This approach offers maximum control and predictability in aggregation table usage, enabling precise performance tuning and explicit aggregation maintenance workflows. AggregationName is commonly used in enterprise data warehousing scenarios where aggregation tables are created through ETL processes, have standardized naming conventions, and require explicit management for data freshness and consistency. The named approach also supports detailed monitoring and administration since each aggregation table is explicitly declared and can be individually managed, validated, and optimized."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="approxRowCount" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Approximate number of rows contained in this aggregation table, providing a size hint that helps the OLAP engine's cost-based optimizer make intelligent decisions about aggregation table selection and query execution strategies. This estimate is used for comparing the relative costs of different aggregation options, predicting memory requirements for caching aggregation data, and determining whether using an aggregation table is likely to be more efficient than scanning the fact table. The value can be specified as a numeric string and should be updated periodically to reflect changes in aggregation table size as underlying data grows. Accurate row count estimates are particularly important in environments with multiple overlapping aggregation tables where the optimizer must choose the most efficient option."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="name" lowerBound="1" eType="#//Table">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the specific database table that contains the pre-computed aggregation data. This table reference must point to an existing physical table within the database schema that has been populated with aggregated measures and dimension keys according to the mappings defined in the parent AggregationTable. The referenced table should have appropriate indexes for the dimensional columns and measure columns to ensure optimal query performance when the OLAP engine substitutes this aggregation for fact table access. The table structure must be compatible with the aggregation mappings defined in aggregationMeasures, aggregationLevels, and other aggregation configuration elements."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationPattern" eSuperTypes="#//AggregationTable #//IAggregationPattern">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Concrete aggregation table implementation that uses regular expression patterns to automatically discover and utilize aggregation tables that follow consistent naming conventions. AggregationPattern provides a scalable, dynamic approach to aggregation table management that is ideal for environments with automated aggregation table creation, standardized naming schemes, and large numbers of aggregation tables that would be impractical to manage individually. This pattern-based discovery mechanism enables the OLAP system to automatically adapt to newly created aggregation tables without requiring manual configuration updates, making it particularly valuable in environments with frequent aggregation table maintenance, automated ETL processes that generate aggregation tables, or data warehouse architectures that create aggregation tables programmatically based on usage patterns and performance requirements."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="pattern" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Regular expression pattern that defines the naming convention for aggregation tables that should be automatically discovered and utilized by this aggregation configuration. The pattern is matched against database table names during aggregation table discovery, enabling the OLAP engine to dynamically identify and incorporate new aggregation tables without manual configuration changes. Patterns should be designed to accurately identify aggregation tables while avoiding false matches with fact tables, dimension tables, or other non-aggregation database objects. Common patterns include prefixes like 'AGG_.*', suffixes like '.*_SUMMARY', or more complex expressions that encode aggregation level information within table names. The pattern matching respects the ignorecase setting inherited from the parent AggregationTable for case-sensitive or case-insensitive matching behavior."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="excludes" upperBound="-1"
        eType="#//AggregationExclude">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of exclusion rules that specify which tables should be ignored even if they match the aggregation pattern, providing fine-grained control over pattern-based aggregation discovery. Exclusions are essential for handling exceptional cases where tables match the naming pattern but are not suitable for aggregation use due to data quality issues, incomplete aggregations, or special-purpose tables that happen to follow similar naming conventions. Each AggregationExclude can specify exact table names to exclude or additional patterns that define categories of tables to avoid. This exclusion mechanism enables robust pattern-based aggregation discovery that can handle complex database environments with mixed table types and naming conventions while maintaining aggregation accuracy and performance."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregationColumnName" eSuperTypes="#//IAggregationColumnName">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specifies the column that stores fact count data in an aggregation table, enabling ROLAP engines to determine the number of base fact table rows that were aggregated into each summary row."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the physical database column containing the aggregated fact count values used by the ROLAP engine for query optimization and result validation."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessCubeGrant" eSuperTypes="#//IAccessCubeGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines cube-level security permissions that control access to a specific OLAP cube and provide the foundation for more granular dimension, hierarchy, and member-level access controls within that analytical context. AccessCubeGrant operates as the primary business-domain security boundary, since cubes typically represent complete analytical subjects such as Sales Analysis, Financial Reporting, or Operations Management that align with organizational responsibilities and business processes."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessCube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessCube.fromValue(getCubeAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensionGrants" upperBound="-1"
        eType="#//AccessDimensionGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of dimension-level access grants that provide fine-grained security control over specific dimensions within the cube's multidimensional space."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hierarchyGrants" upperBound="-1"
        eType="#//AccessHierarchyGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of hierarchy-level access grants that define granular security permissions for specific hierarchies within the cube's dimensional structure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cubeAccess" lowerBound="1"
        eType="#//CubeAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the cube using the CubeAccess enumeration values (all, none, custom), determining whether role members can view cube data and structure."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cube" lowerBound="1" eType="#//Cube">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific cube instance to which this access grant applies, establishing the security boundary for the targeted analytical domain."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessDatabaseSchemaGrant" eSuperTypes="#//IAccessDatabaseSchemaGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Extends the OLAP security model to the database level by controlling access to database schemas, tables, and columns that underlie the OLAP analytical structures, providing comprehensive data governance that enforces security policies regardless of how data is accessed."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessDatabaseSchema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessDatabaseSchema.fromValue(getDatabaseSchemaAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="databaseSchemaAccess" lowerBound="1"
        eType="#//DatabaseSchemaAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Defines the access level for the database schema using DatabaseSchemaAccess enumeration values, controlling whether role members can interact with schema structures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tableGrants" lowerBound="1"
        upperBound="-1" eType="#//AccessTableGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of table-level access grants that provide granular security control over specific tables within the database schema."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="databaseSchema" lowerBound="1"
        eType="#//DatabaseSchema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific database schema to which this access grant applies, establishing the security boundary at the database level."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessTableGrant" eSuperTypes="#//IAccessTableGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines table-level security permissions that control access to specific database tables and their columns, providing fine-grained data governance at the physical storage level."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessTable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessTable.fromValue(getTableAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="tableAccess" lowerBound="1"
        eType="#//TableAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the table using TableAccess enumeration values, controlling whether role members can view or modify table data."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="columnGrants" lowerBound="1"
        upperBound="-1" eType="#//AccessColumnGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of column-level access grants that provide the finest level of security control over individual columns within the table."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" lowerBound="1" eType="#//Table">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific table to which this access grant applies, establishing the security boundary at the table level."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessColumnGrant" eSuperTypes="#//IAccessColumnGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Provides the most granular level of database security control by defining access permissions for individual database columns, enabling extremely precise data governance policies that can restrict access to specific data elements based on sensitivity, regulatory requirements, privacy concerns, or business confidentiality needs."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessColumn">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessColumn.fromValue(getColumnAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="columnAccess" lowerBound="1"
        eType="#//ColumnAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the column using ColumnAccess enumeration values, providing the finest-grained control over data access at the individual column level."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific column to which this access grant applies, establishing the security boundary at the individual column level."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessDimensionGrant" eSuperTypes="#//IAccessDimensionGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines dimension-level security permissions that control access to specific dimensions within a cube, providing targeted control over dimensional navigation and member visibility."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessDimension">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessDimension.fromValue(getDimensionAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dimensionAccess" lowerBound="1"
        eType="#//DimensionAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the dimension using DimensionAccess enumeration values, controlling whether role members can view and navigate the dimension."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimension" lowerBound="1"
        eType="#//Dimension">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific dimension to which this access grant applies, establishing the security boundary at the dimension level."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessHierarchyGrant" eSuperTypes="#//IAccessHierarchyGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Provides sophisticated hierarchy-level access control that enables fine-grained security policies for dimensional navigation, member visibility, and aggregation behavior within a specific hierarchy. AccessHierarchyGrant represents one of the most powerful and complex aspects of the OLAP security model, supporting advanced scenarios including member-level restrictions, level-based access boundaries, dynamic security expressions, and rollup policy controls that determine how aggregate values are calculated when some members are inaccessible."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessHierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessHierarchy.fromValue(getHierarchyAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getRollupPolicyType" lowerBound="1" eType="#//RollupPolicyType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return RollupPolicyType.fromValue(getRollupPolicy().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberGrants" upperBound="-1"
        eType="#//AccessMemberGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of member-level access grants that provide the finest level of control over individual members within the hierarchy."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="hierarchyAccess" lowerBound="1"
        eType="#//HierarchyAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the hierarchy using HierarchyAccess enumeration values, controlling overall hierarchy visibility and navigation permissions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="rollupPolicy" lowerBound="1"
        eType="#//RollupPolicy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Defines how aggregate values are calculated when some hierarchy members are inaccessible, ensuring data consistency and security in partial access scenarios."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hierarchy" lowerBound="1"
        eType="#//Hierarchy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the specific hierarchy to which this access grant applies, establishing the security boundary at the hierarchy level."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="bottomLevel" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to the deepest level in the hierarchy that role members can access, establishing a floor for dimensional navigation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="topLevel" eType="#//Level">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional reference to the highest level in the hierarchy that role members can access, establishing a ceiling for dimensional navigation."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessMemberGrant" eSuperTypes="#//IAccessMemberGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Implements the most granular level of OLAP security control by defining access permissions for individual members within dimensional hierarchies, enabling precise business-driven security policies that reflect real-world organizational boundaries, customer relationships, geographic territories, product ownership, and regulatory restrictions."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessMember">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessMember.fromValue(getMemberAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberAccess" lowerBound="1"
        eType="#//MemberAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the access level for the member using MemberAccess enumeration values, providing the most granular control over individual member visibility."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="member" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Identifies the specific member within the hierarchy by its unique name or path, establishing the exact target of this granular access control."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessRole" eSuperTypes="#//AbstractElement #//IAccessRole">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a comprehensive role-based access control (RBAC) entity that encapsulates all security permissions and restrictions for accessing OLAP resources at multiple hierarchical levels of granularity. AccessRole serves as the fundamental security principal in the OLAP framework, implementing a sophisticated multi-level security model that operates from the catalog level down to individual members, columns, and database objects. Each role defines explicit access permissions through a collection of grants that specify whether access is completely allowed (ALL), completely denied (NONE), or selectively controlled (CUSTOM) with fine-grained sub-permissions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="accessCatalogGrants" upperBound="-1"
        eType="#//AccessCatalogGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of catalog-level access grants that define the top-level permissions for accessing OLAP catalogs and their contained resources. Each AccessCatalogGrant specifies whether the role has comprehensive access to an entire catalog (ALL), no access whatsoever (NONE), selective access to only shared dimensions without cube access (ALL_DIMENSIONS), or fine-grained custom access that requires explicit sub-grants for individual cubes, dimensions, and other catalog resources (CUSTOM). Catalog grants serve as the primary entry point for role-based security evaluation, determining the overall scope of access before more granular permissions are evaluated. The catalog level is particularly important for multi-tenant scenarios where different user groups need access to completely different analytical contexts, for organizational security where departments have access to different business areas, and for regulatory compliance where certain data categories must be completely isolated from specific user groups. Multiple catalog grants within a single role enable cross-catalog access scenarios and support complex enterprise architectures where analytical resources are distributed across multiple OLAP catalogs for performance, governance, or organizational reasons."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedAccessRoles"
        upperBound="-1" eType="#//AccessRole" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of other AccessRole objects that should be combined with this role using union semantics, creating composite roles that aggregate permissions from multiple sources. This role composition mechanism enables sophisticated organizational security models where user permissions are derived from multiple overlapping sources such as department-based roles, project-based roles, geographic roles, and temporary access grants. The union operation combines permissions using the most permissive access level from any contributing role, ensuring that users receive the maximum access available from any of their assigned roles while maintaining security boundaries. Referenced roles support hierarchical organizational structures where users inherit permissions from organizational units, enable delegation scenarios where managers can grant subsets of their permissions to team members, facilitate temporary access elevation for specific projects or time periods, and implement complex matrix organizational structures where users have multiple reporting relationships. The composition mechanism also supports role template patterns where common permission sets are defined once and reused across multiple specific roles, reducing administrative overhead and ensuring consistency in security policy implementation across large enterprise deployments."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessCatalogGrant" eSuperTypes="#//IAccessCatalogGrant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a catalog-level security grant that defines the foundational access permissions for an OLAP catalog and serves as the root of the hierarchical access control evaluation process. AccessCatalogGrant establishes the primary security boundary that determines whether a role can access any resources within a specific catalog, and when custom access is specified, it provides the container for more granular cube-level and database schema-level grants that define precisely which catalog resources are accessible."/>
    </eAnnotations>
    <eOperations name="getAccess" lowerBound="1" eType="#//AccessCatalog">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return AccessCatalog.fromValue(getCatalogAccess().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cubeGrants" lowerBound="1"
        upperBound="-1" eType="#//AccessCubeGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of cube-level access grants that define specific permissions for individual cubes within the catalog when the catalogAccess is set to CUSTOM, enabling fine-grained control over which analytical resources are accessible to the role. Each AccessCubeGrant specifies whether the role has complete access to a cube (ALL), no access to the cube (NONE), or selective access that requires additional dimension and hierarchy grants (CUSTOM). Cube grants are essential for implementing business-oriented security models where different user groups need access to different analytical domains such as sales cubes for sales teams, financial cubes for finance departments, and operational cubes for operations managers. This granular approach supports complex enterprise scenarios including multi-departmental organizations where users should only see cubes relevant to their business function, regulatory compliance requirements where certain cubes contain sensitive data that must be restricted to authorized personnel, performance optimization where access restrictions reduce the scope of metadata loading and query processing, and multi-tenant deployments where different customer organizations require access to different analytical content. The cube grant level is particularly important because cubes represent complete analytical contexts with their associated dimensions, measures, and calculated members, making cube-level security an effective way to implement business-domain-based access control that aligns with organizational structures and analytical usage patterns."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="databaseSchemaGrants" lowerBound="1"
        upperBound="-1" eType="#//AccessDatabaseSchemaGrant" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of database schema-level access grants that define permissions for accessing the underlying database structures that support the OLAP catalog, extending security control beyond the logical OLAP model to the physical data layer. Each AccessDatabaseSchemaGrant specifies access permissions for database schemas, tables, and columns, enabling comprehensive data governance that covers both analytical access through OLAP operations and potential direct data access through SQL queries or data integration processes. Database schema grants are crucial for implementing defense-in-depth security strategies where access control is enforced at multiple layers of the data architecture, for regulatory compliance scenarios where data access must be auditable and restrictable at the database level regardless of the access method, for supporting hybrid analytical environments where users might access data through both OLAP tools and direct SQL interfaces, and for enabling administrative scenarios where technical users need access to underlying database structures for maintenance, optimization, or troubleshooting purposes. The database-level security integration ensures that OLAP security policies are consistent with broader enterprise data governance frameworks and provides additional protection against unauthorized data access that might bypass the OLAP layer entirely."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="catalogAccess" lowerBound="1"
        eType="#//CatalogAccess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enumerated value that specifies the level of access this role has to the catalog and all its contained resources, serving as the primary access control decision point for catalog-level operations. The access level determines the overall scope of permissions and influences how sub-grants are evaluated and applied. When set to ALL, the role receives complete unrestricted access to the entire catalog including all cubes, dimensions, hierarchies, members, and database objects, effectively granting administrative privileges for the catalog scope. When set to NONE, the role is completely denied access to the catalog and all its contents, preventing any interaction with catalog resources regardless of any sub-grants that might be defined. When set to ALL_DIMENSIONS, the role receives access to shared dimensions and their metadata but is denied access to cubes and fact data, enabling metadata browsing and dimension exploration scenarios without exposing sensitive measure data. When set to CUSTOM, the role's access is determined by the explicit cubeGrants and databaseSchemaGrants collections, enabling fine-grained security policies where specific permissions are granted only for explicitly authorized resources. The CUSTOM setting is most commonly used in enterprise scenarios where complex security requirements necessitate selective access to different parts of the catalog based on business roles, organizational hierarchies, regulatory requirements, or multi-tenant isolation needs."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DatabaseCatalog" eSuperTypes="#//IDatabaseCatalog #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a database catalog that organizes database schemas and external data links. DatabaseCatalog serves as the top-level container for database metadata, providing structured access to schema definitions and connection management."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="schemas" upperBound="-1"
        eType="#//DatabaseSchema" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of database schemas contained within this catalog. Each schema defines tables, columns, and relationships that form the physical data foundation for OLAP cubes and dimensions."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="links" upperBound="-1"
        eType="#//Link" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of external data links that connect to remote databases or data sources. Links enable distributed OLAP architectures where data can be accessed from multiple database systems."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DatabaseSchema" eSuperTypes="#//IDatabaseSchema #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a database schema containing tables and their structural relationships. DatabaseSchema provides the logical grouping of tables that serve as the data foundation for OLAP cube construction and dimensional modeling."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tables" upperBound="-1"
        eType="#//Table" containment="true" eOpposite="#//Table/schema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of tables within this database schema. Tables include fact tables, dimension tables, and aggregation tables that provide the physical data structure for OLAP operations."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Table" abstract="true" eSuperTypes="#//ITable #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for database tables that serve as data sources for OLAP operations. Table defines common structure and metadata for physical tables, views, and queries used in dimensional modeling."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="columns" upperBound="-1"
        eType="#//Column" containment="true" eOpposite="#//Column/table">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of columns that define the table structure. Columns specify data types, constraints, and metadata required for OLAP dimension and measure mappings."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="schema" eType="#//DatabaseSchema"
        eOpposite="#//DatabaseSchema/tables">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the parent database schema that contains this table. Establishes the schema-table relationship for proper database organization and namespace management."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PhysicalTable" eSuperTypes="#//IPhysicalTable #//Table">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a physical database table that exists in the database system. PhysicalTable is the most common table type used for fact tables, dimension tables, and aggregation tables in OLAP implementations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SystemTable" eSuperTypes="#//ISystemTable #//Table">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a database system table that contains metadata or administrative information. SystemTable is typically used for referencing database catalog tables or system views in OLAP configurations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ViewTable" eSuperTypes="#//IViewTable #//Table">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a database view that provides a logical table interface over underlying physical tables. ViewTable enables complex OLAP mappings that require data transformation or aggregation at the database level."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OrderedColumn" eSuperTypes="#//IOrderedColumn #//Column">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a column with specific ordering information used in queries and result sets. OrderedColumn is typically used in OLAP contexts where explicit column ordering is required for query processing or result presentation."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the column that provides the ordering basis. This column's values determine the sort order for query results and dimensional member presentation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ascend" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating sort direction. When true, sort in ascending order; when false, sort in descending order. Defaults to true for ascending sort."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Column" abstract="true" eSuperTypes="#//IColumn #//AbstractElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for database columns that define data structure and metadata for OLAP mappings. Column provides common attributes for data type, size, and constraints used in dimensional modeling and measure definitions."/>
    </eAnnotations>
    <eOperations name="getDataType" eType="#//ColumnDataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ColumnDataType.fromValue(getType().getLiteral());"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//ColumnType"
        defaultValueLiteral="Varchar">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Data type of the column specifying the kind of data stored. Column type determines how data is processed in OLAP operations and dimensional mappings. Defaults to Varchar."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="columnSize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Maximum size or length of data that can be stored in this column. For character types, specifies maximum character count; for numeric types, specifies precision."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" eType="#//Table"
        eOpposite="#//Table/columns">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the parent table that contains this column. Establishes the table-column relationship for proper database structure organization."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="primaryLinks" upperBound="-1"
        eType="#//Link">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of links where this column serves as the primary key. These links define relationships where this column is the target of foreign key references from other tables."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="foreignLinks" upperBound="-1"
        eType="#//Link" eOpposite="#//Link/primaryKey">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of links where this column acts as a foreign key referencing primary keys in other tables. These links establish dimensional relationships in OLAP schemas."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="decimalDigits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Number of digits to the right of the decimal point for numeric columns. Specifies the scale for decimal and numeric data types used in measure calculations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="charOctetLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Maximum length in bytes for character data types. Specifies the storage space required for variable-length character columns in the database."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numPrecRadix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Radix for numeric precision, typically 10 for decimal or 2 for binary numeric types. Defines the base for interpreting the precision value of numeric columns."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="nullable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean flag indicating whether the column can contain null values. Critical for OLAP operations as null handling affects aggregation calculations and dimensional member processing."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PhysicalColumn" eSuperTypes="#//Column #//IPhysicalColumn">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a physical column that exists in the database table structure. PhysicalColumn is the most common column type used for dimension keys, measure values, and attribute mappings in OLAP schemas."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SQLExpressionColumn" eSuperTypes="#//ISQLExpressionColumn #//Column">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a virtual column defined by SQL expressions rather than physical table columns. SQLExpressionColumn enables computed columns, derived values, and complex calculations in OLAP mappings."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sqls" lowerBound="1" upperBound="-1"
        eType="#//SqlStatement" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of SQL statements that define the expression for this column. Multiple statements support database-specific SQL expressions for different database dialects."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Query" abstract="true" eSuperTypes="#//IQuery #//DocumentedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for all data source queries in the OLAP mapping system, providing the foundation for accessing and combining data from various sources including physical database tables, custom SQL views, in-memory data sets, and complex multi-table joins. Queries serve as the data access layer that bridges the logical OLAP model with physical data storage, enabling the OLAP engine to generate appropriate SQL statements for different database systems while maintaining abstraction from specific storage implementations. The Query hierarchy supports composable patterns where simple queries can be combined into complex data access structures through joins, enabling sophisticated dimensional modeling over normalized database schemas and custom data integration scenarios."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier for this query within the catalog scope, used for referencing the query from other OLAP model elements such as cube definitions, hierarchy specifications, and level mappings. The ID enables query reuse across multiple dimensional contexts and supports modular data access design patterns where complex queries can be defined once and referenced multiple times throughout the analytical model."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="documentation" eType="#//Documentation"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Documentation element that provides descriptive information about this SQL expression column. Contains text explaining the purpose and behavior of the SQL expression, helping developers understand complex calculated columns."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Link" eSuperTypes="#//ILink">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a foreign key relationship between two database tables, establishing referential integrity constraints that are essential for dimensional modeling in OLAP systems. Links connect fact tables to dimension tables, enabling proper join relationships for star and snowflake schema implementations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="primaryKey" lowerBound="1"
        eType="#//Column" eOpposite="#//Column/foreignLinks">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the primary key column in the target dimension table. This column serves as the unique identifier that foreign key columns reference to establish table relationships in the dimensional model."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="foreignKey" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference to the foreign key column in the source table (typically a fact table) that points to the primary key in the target dimension table. This column contains dimension key values that enable joins between fact and dimension tables."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InlineTable" eSuperTypes="#//IInlineTable #//Table">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a table with data embedded directly in the schema definition rather than referencing external database tables. InlineTable allows small lookup tables, dimension data, or test data to be included directly in the OLAP schema, eliminating the need for separate database tables for static reference data."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rows" upperBound="-1" eType="#//Row"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of data rows that define the actual content of this inline table. Each row contains column values that correspond to the table's column definitions, providing the embedded data directly in the schema."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Row" eSuperTypes="#//IRow">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a single data row within an InlineTable, containing a collection of column values. Row provides the structure for embedding tabular data directly in the OLAP schema definition."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rowValues" upperBound="-1"
        eType="#//RowValue" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of column values for this row. Each RowValue pairs a column reference with its corresponding data value, defining the complete content of this table row."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RowValue" eSuperTypes="#//IRowValue">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a single column value within a row of an InlineTable. RowValue pairs a column reference with its data value, providing the basic unit for embedding tabular data in OLAP schema definitions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="column" lowerBound="1"
        eType="#//Column">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Required reference to the column definition that this value corresponds to. The column reference ensures proper data type mapping and structural consistency within the inline table."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The actual data value for this column in string format. Values are converted to appropriate data types based on the column definition when processed by the OLAP engine."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SqlStatement" eSuperTypes="#//ISqlStatement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Contains SQL expression text and database dialect information for database-specific SQL implementations. SqlStatement enables OLAP schemas to support multiple database platforms by providing dialect-specific SQL expressions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dialects" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of database dialect identifiers that specify which database systems this SQL statement applies to. Examples include 'mysql', 'postgresql', 'oracle', 'sqlserver'. When empty, the statement applies to all database types."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sql" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The actual SQL expression text that defines this statement. Contains database-specific SQL syntax that will be executed or used in query generation by the OLAP engine."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SqlView" eSuperTypes="#//ISqlView #//Table">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a virtual table defined by SQL query expressions rather than physical database tables. SqlView enables complex data transformations, joins, and calculations to be encapsulated as table sources for OLAP dimensions and measures."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sqlStatements" lowerBound="1"
        upperBound="-1" eType="#//SqlStatement" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of SQL statements that define this view's query logic. Multiple statements support database-specific implementations, with the OLAP engine selecting the appropriate statement based on the target database dialect."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IAbstractElement" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AbstractElementMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessCubeGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessCubeGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessDatabaseSchemaGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessDatabaseSchemaGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessTableGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessTableGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessColumnGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessColumnGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessDimensionGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessDimensionGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessHierarchyGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessHierarchyGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessMemberGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessMemberGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessRole" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessRoleMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAccessCatalogGrant" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AccessCatalogGrantMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAction" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ActionMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationColumnName" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationColumnNameMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationExclude" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationExcludeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationForeignKey" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationForeignKeyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationLevel" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationLevelMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationLevelProperty" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationLevelPropertyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationMeasureFactCount" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationMeasureFactCountMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationName" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationNameMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationPattern" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationPatternMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAggregationTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AggregationTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAnnotation" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AnnotationMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICalculatedMember" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CalculatedMemberMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICalculatedMemberProperty" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CalculatedMemberPropertyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICellFormatter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CellFormatterMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICubeConnector" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CubeConnectorMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICube" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CubeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDimensionConnector" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DimensionConnectorMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDimension" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DimensionMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDrillThroughAction" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DrillThroughActionMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDrillThroughAttribute" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DrillThroughAttributeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IFormatter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.FormatterMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IHierarchy" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.HierarchyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IInlineTableQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.InlineTableQueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IJoinedQueryElement" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.JoinedQueryElementMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IJoinQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.JoinQueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IKpi" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.KpiMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ILevel" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.LevelMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IExplicitHierarchy" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ExplicitHierarchyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IParentChildHierarchy" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ParentChildHierarchyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMeasureGroup" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MeasureGroupMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IBaseMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IColumnBaseMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ColumnMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISqlExpressionBaseMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SqlExpressionMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICustomMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CustomMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMinMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MinMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMaxMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MaxMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISumMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SumMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IAvgMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.AvgMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICountMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CountMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="INoneMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.NoneMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITextAggMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TextAggMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IBitAggMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.BitAggMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IPercentileMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.PercentileMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="INthAggMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.NthAggMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMember" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MemberMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMemberProperty" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MemberPropertyMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMemberPropertyFormatter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MemberPropertyFormatterMapping"
      abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMemberFormatter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MemberFormatterMapping"
      abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IMemberReaderParameter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.MemberReaderParameterMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="INamedSet" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.NamedSetMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IParameter" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ParameterMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IParentChildLink" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ParentChildLinkMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IPhysicalColumn" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.PhysicalColumnMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IPhysicalCube" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.PhysicalCubeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.QueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IRelationalQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.RelationalQueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ICatalog" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.CatalogMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISQLExpressionColumn" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SQLExpressionColumnMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISqlSelectQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SqlSelectQueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IStandardDimension" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.StandardDimensionMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITableQuery" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TableQueryMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITableQueryOptimizationHint" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TableQueryOptimizationHintMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITimeDimension" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TimeDimensionMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITranslation" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TranslationMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IVirtualCube" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.VirtualCubeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IWritebackAttribute" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.WritebackAttributeMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IWritebackMeasure" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.WritebackMeasureMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IWritebackTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.WritebackTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDatabaseCatalog" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DatabaseCatalogMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IDatabaseSchema" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.DatabaseSchemaMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ITable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.TableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IPhysicalTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.PhysicalTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IViewTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ViewTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISystemTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SystemTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IColumn" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.ColumnMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IOrderedColumn" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.OrderedColumnMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ILink" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.LinkMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IInlineTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.InlineTableMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IRow" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.RowMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IRowValue" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.RowValueMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISqlStatement" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SqlStatementMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ISqlView" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.SqlViewMapping"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EEnum" name="CatalogAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining the access permission levels for OLAP catalogs within the role-based security framework, establishing the fundamental security boundaries that control whether users can access catalog resources and determining the overall scope of analytical capabilities available to specific roles. CatalogAccess represents the highest level of the OLAP security hierarchy and serves as the primary access control decision point that influences all subordinate security evaluations for cubes, dimensions, hierarchies, and members contained within the catalog."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies all access to the catalog. Users with NONE access cannot view catalog metadata, access any cubes, or perform any analytical operations within this catalog."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to the catalog and all its contents. Users can access all cubes, dimensions, hierarchies, and measures without restrictions."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables granular access control through specific grants for individual cubes, dimensions, and members. Custom access requires additional security grants to define permitted operations."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL_DIMENSIONS" value="3" literal="all_dimensions">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants access to all dimensional metadata within the catalog while requiring specific grants for cube and measure access. Allows browsing dimension structures without accessing fact data."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DatabaseSchemaAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for database schemas in OLAP security contexts. Controls whether users can access tables and data within specific database schemas that underlie OLAP cubes and dimensions."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the database schema. Users cannot access any tables or data within this schema."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to all tables and data within the database schema."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables selective table-level access control within the schema through specific table grants."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TableAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for individual database tables in OLAP security. Controls user access to specific fact tables, dimension tables, and other database tables used in OLAP operations."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the table. Users cannot query or access data from this table."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to all data within the table."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables row-level or column-level access control within the table through specific data filtering rules."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ColumnAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for individual database columns in OLAP security. Controls user access to specific columns within tables, enabling column-level data protection for sensitive information."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the column. Users cannot view or query data from this column."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to all data within the column."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="CubeAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for OLAP cubes within the security framework. Controls user access to analytical cubes, their measures, calculated members, and dimensional context within the multidimensional data space."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the cube. Users cannot view cube metadata, measures, or perform any analytical operations on this cube."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to the cube including all measures, calculated members, dimensions, and hierarchies."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables granular access control through dimension grants, hierarchy grants, and member-level security within the cube."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DimensionAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for OLAP dimensions within cube security. Controls user access to dimensional metadata, hierarchies, levels, and member data that form the analytical context for multidimensional queries."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the dimension. Users cannot view dimension metadata, hierarchies, or access any members within this dimension."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to all hierarchies, levels, and members within the dimension."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables selective access through hierarchy grants and member-level security rules within the dimension."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HierarchyAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for OLAP hierarchies within dimension security. Controls user access to hierarchical structures, levels, and member navigation paths that organize dimensional data."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to the hierarchy. Users cannot view hierarchy structure, levels, or access any members within this hierarchy."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants full access to all levels and members within the hierarchy."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables member-level security and selective access to specific portions of the hierarchy through member grants and filtering rules."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HideMemberIf">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration that specifies conditions under which dimensional members should be automatically hidden from client tools and analytical interfaces, providing sophisticated data quality management and user experience optimization for hierarchies that may contain incomplete, malformed, or inappropriate member data. HideMemberIf addresses common data quality challenges in real-world OLAP deployments where source systems may contain inconsistent data, incomplete hierarchical relationships, or members that should not be visible to end users due to business rules, data quality issues, or presentation requirements."/>
    </eAnnotations>
    <eLiterals name="NEVER" literal="Never">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Never hide any members. All members in the hierarchy are visible regardless of data quality or completeness issues."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="IF_BLANK_NAME" value="1" literal="IfBlankName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Hide members that have blank or null names. Useful for filtering out incomplete data where member names are missing from the source system."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="IF_PARENTS_NAME" value="2" literal="IfParentsName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Hide members whose name matches their parent member's name. Eliminates redundant display where child members have identical names to their parents in the hierarchy."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="MemberAccess">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining access levels for individual dimensional members within OLAP security. Provides the most granular level of access control by specifying which specific members users can access within hierarchies."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="none">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Denies access to specific members. Users cannot view these members or any of their descendants in the hierarchy."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ALL" value="1" literal="all">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Grants access to all members in the hierarchy including descendants and related members."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOM" value="2" literal="custom">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Enables fine-grained member-level access control with specific grants and filtering rules for individual members and member sets."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RollupPolicy">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration that defines how aggregate values should be calculated when some members in a hierarchy are inaccessible due to security restrictions, providing critical control over data accuracy and security boundary handling in scenarios where partial member access could lead to misleading analytical results. RollupPolicy addresses one of the most complex challenges in secure OLAP systems where users may have access to some members in a hierarchy but not others, creating situations where standard aggregation operations could either reveal restricted information through inference or provide inaccurate results that misrepresent the true business situation."/>
    </eAnnotations>
    <eLiterals name="FULL" literal="full">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Include all member values in aggregation calculations, including those the user cannot directly access. Provides complete aggregate values but may reveal restricted information through inference."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PARTIAL" value="1" literal="partial">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Include only accessible member values in aggregation calculations. Provides secure but potentially incomplete aggregate values that exclude restricted data."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="HIDDEN" value="2" literal="hidden">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Hide aggregate values completely when some constituent members are inaccessible. Ensures maximum security by preventing any potential information disclosure through aggregated values."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ColumnInternalDataType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration that defines the internal data type classifications used throughout the OLAP framework for consistent data handling, SQL generation, comparison operations, formatting, and type validation across different database systems and analytical contexts. ColumnInternalDataType provides a unified type system that abstracts database-specific data type variations while maintaining the semantic information necessary for proper analytical processing, measure aggregation, dimensional sorting, and user interface presentation."/>
    </eAnnotations>
    <eLiterals name="STRING" literal="String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Text data type for character strings, names, descriptions, and categorical values in dimensions and member properties."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="NUMERIC" value="1" literal="Numeric">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Decimal numeric data type for measure values, calculated metrics, and precise numerical data requiring decimal precision."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="INTEGER" value="2" literal="Integer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Whole number data type for counts, ordinal values, and integer-based measures and dimension keys."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BOOLEAN" value="3" literal="Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean data type for true/false flags, binary indicators, and yes/no categorical data in dimensional attributes."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DATE" value="4" literal="Date">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Date data type for calendar dates without time components, used in time dimensions and date-based analytical operations."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME" value="5" literal="Time">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Time data type for time-of-day values without date components, used for intraday analysis and time-based dimensions."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIMESTAMP" value="6" literal="Timestamp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Timestamp data type combining date and time components for precise temporal data, event tracking, and time-series analysis."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ColumnType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining database-specific column data types that map to the underlying database system's native data types. ColumnType provides the physical database type specification that complements the internal data type system for complete type management across different database platforms."/>
    </eAnnotations>
    <eLiterals name="VARCHAR" literal="Varchar">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Variable-length character string type for text data, names, and descriptions in dimensional attributes."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="NUMERIC" value="1" literal="Numeric">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Exact numeric type with user-defined precision and scale for precise decimal calculations in measures."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DECIMAL" value="2" literal="Decimal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Fixed-point decimal type for financial data and precise numerical measures requiring exact decimal representation."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="FLOAT" value="3" literal="Float">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Single-precision floating-point type for approximate numeric data and scientific calculations."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="REAL" value="4" literal="Real">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Real number type for floating-point numerical data in measures and calculated values."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="INTEGER" value="5" literal="Integer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Whole number type for counts, identifiers, and integer-based dimensional keys."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SMALLINT" value="6" literal="SmallInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Small integer type for compact storage of ordinal values and small numeric identifiers."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DOUBLE" value="7" literal="Double">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Double-precision floating-point type for high-precision numerical measures and statistical calculations."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OTHER" value="8" literal="Other">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Fallback type for database-specific or custom data types not covered by standard type definitions."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BOOLEAN" value="10" literal="Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Boolean type for true/false values, flags, and binary indicators in dimensional attributes."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DATE" value="11" literal="Date">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Date type for calendar dates used in time dimensions and temporal analysis."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME" value="12" literal="Time">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Time type for time-of-day values used in temporal dimensions and time-based analysis."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIMESTAMP" value="13" literal="Timestamp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Timestamp type combining date and time for precise temporal data and event tracking."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BIGINT" value="14" literal="BinInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Large integer type for high-volume identifiers and big integer calculations."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BitAggType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining bitwise aggregation operations for boolean-based measures and flag calculations in OLAP systems. BitAggType enables aggregation of binary data using logical operations."/>
    </eAnnotations>
    <eLiterals name="AND" literal="and">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical AND operation - result is true only when all aggregated values are true."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OR" value="1" literal="or">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical OR operation - result is true when any aggregated value is true."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="XOR" value="2" literal="xor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Exclusive OR operation - result is true when an odd number of aggregated values are true."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PercentType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration defining methods for calculating percentage-based measures and statistical analysis in OLAP systems. PercentType controls how percentage calculations handle discontinuous versus continuous data ranges."/>
    </eAnnotations>
    <eLiterals name="DISC" literal="disc">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Discontinuous percentage calculation using discrete value intervals for rank-based and categorical percentage analysis."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CONT" value="1" literal="cont">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Continuous percentage calculation using interpolated values for smooth statistical distributions and percentile analysis."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LevelDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Enumeration that defines semantic level types for dimensional hierarchy levels, providing business meaning and context that enables specialized analytical behavior, client tool integration, and intelligent query processing based on the conceptual role that each level plays within the business domain."/>
    </eAnnotations>
    <eLiterals name="REGULAR" literal="Regular">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that the level is not related to time."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_YEARS" value="1" literal="TimeYears">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to years."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_HALF_YEARS" value="2" literal="TimeHalfYears">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to half years"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_QUARTERS" value="3" literal="TimeQuarters">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to quarters"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_MONTHS" value="4" literal="TimeMonths">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to months"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_WEEKS" value="5" literal="TimeWeeks">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to weeks"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_DAYS" value="6" literal="TimeDays">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to days"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_HOURS" value="7" literal="TimeHours">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to hours"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_MINUTES" value="8" literal="TimeMinutes">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to minutes"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_SECONDS" value="9" literal="TimeSeconds">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level refers to seconds"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TIME_UNDEFINED" value="10" literal="TimeUndefined">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is an unspecified time period"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="NULL" value="11" literal="Null">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the null member"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_CONTINENT" value="12" literal="GeographicContinent">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object Continent."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_REGION" value="13" literal="GeographicRegion">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object Region."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_COUNTRY" value="14" literal="GeographicCountry">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object Country."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_STATE_OR_PROVINCE" value="15" literal="GeographicProvince">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical objects State or Province."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_COUNTY" value="16" literal="GeographicCounty">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object County."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_CITY" value="17" literal="GeographicCity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object City."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_POSTALCODE" value="18" literal="GeographicPostalCode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object PostalCode."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEO_POINT" value="18" literal="GeographicPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds the geographical object Point."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ORG_UNIT" value="19" literal="OrganisationUnit">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds a OrganisationUnit."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BOM_RESOURCE" value="20" literal="BomResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level holds a Bom Resource."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="QUANTITATIVE" value="21" literal="Quantitative">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a QUANTITATIVE."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ACCOUNT" value="22" literal="Account">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Account."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOMER" value="23" literal="Customer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Customer."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOMER_GROUP" value="24" literal="CustomerGroup">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a CustomerGroup."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CUSTOMER_HOUSEHOLD" value="25" literal="CustomerHouseHold">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a CustomerGroup."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PRODUCT" value="26" literal="Product">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Product."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PRODUCT_GROUP" value="27" literal="ProductGroup">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a ProductGroup."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SCENARIO" value="28" literal="Scenario">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Scenario."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="UTILITY" value="29" literal="Utility">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Utility."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PERSON" value="30" literal="Person">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Person."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="COMPANY" value="21" literal="Company">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Company."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CURRENCY_SOURCE" value="32" literal="CurrencySource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a CurrencySource."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CURRENCY_DESTINATION" value="33" literal="CurrencyDestination">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a CurrencyDestination."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="CHANNEL" value="34" literal="Channel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Channel."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="REPRESENTATIVE" value="35" literal="Representative">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Representative."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PROMOTION" value="36" literal="Promotion">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates that a level is a Promotion."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessCatalog" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessCatalog"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessDatabaseSchema" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessDatabaseSchema"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessTable" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessTable"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessColumn" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessColumn"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessCube" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessCube"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessDimension" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessDimension"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessHierarchy" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessHierarchy"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AccessMember" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.AccessMember"/>
  <eClassifiers xsi:type="ecore:EDataType" name="InternalDataType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.InternalDataType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="HideMemberIfType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.HideMemberIfType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="LevelType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.LevelType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="RollupPolicyType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.RollupPolicyType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="ColumnDataType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.ColumnDataType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="BitAggregationType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.BitAggregationType"/>
  <eClassifiers xsi:type="ecore:EDataType" name="PercentileType" instanceClassName="org.eclipse.daanse.rolap.mapping.api.model.enums.PercentileType"/>
</ecore:EPackage>
